<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Castle.Core.Fakes</name>
    </assembly>
    <members>
        <member name="T:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration">
            <summary>Shim type of Castle.Core.Configuration.AbstractConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.#ctor(Castle.Core.Configuration.AbstractConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.Bind(Castle.Core.Configuration.IConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AttributesGet">
            <summary>Sets the shim of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.ChildrenGet">
            <summary>Sets the shim of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.Constructor">
            <summary>Sets the shim of AbstractConfiguration.AbstractConfiguration()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.GetValueTypeObject">
            <summary>Sets the shim of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.NameGet">
            <summary>Sets the shim of AbstractConfiguration.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.NameSetString">
            <summary>Sets the shim of AbstractConfiguration.set_Name(String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.ValueGet">
            <summary>Sets the shim of AbstractConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.ValueSetString">
            <summary>Sets the shim of AbstractConfiguration.set_Value(String value)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.AttributesGet">
            <summary>Sets the shim of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.ChildrenGet">
            <summary>Sets the shim of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.GetValueTypeObject">
            <summary>Sets the shim of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.NameGet">
            <summary>Sets the shim of AbstractConfiguration.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.NameSetString">
            <summary>Sets the shim of AbstractConfiguration.set_Name(String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.ValueGet">
            <summary>Sets the shim of AbstractConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.ValueSetString">
            <summary>Sets the shim of AbstractConfiguration.set_Value(String value)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection">
            <summary>Shim type of Castle.Core.Configuration.ConfigurationAttributeCollection</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.#ctor(Castle.Core.Configuration.ConfigurationAttributeCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Constructor">
            <summary>Sets the shim of ConfigurationAttributeCollection.ConfigurationAttributeCollection()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationAttributeCollection.ConfigurationAttributeCollection(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimConfigurationCollection">
            <summary>Shim type of Castle.Core.Configuration.ConfigurationCollection</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.#ctor(Castle.Core.Configuration.ConfigurationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.Generic.ICollection{Castle.Core.Configuration.IConfiguration})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.Generic.IEnumerable{Castle.Core.Configuration.IConfiguration})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.Generic.IList{Castle.Core.Configuration.IConfiguration})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Constructor">
            <summary>Sets the shim of ConfigurationCollection.ConfigurationCollection()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.ConstructorIEnumerableOfIConfiguration">
            <summary>Sets the shim of ConfigurationCollection.ConfigurationCollection(IEnumerable`1&lt;IConfiguration&gt; value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.ItemGetString">
            <summary>Sets the shim of ConfigurationCollection.get_Item(String name)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ConfigurationCollection.get_Item(String name)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimMutableConfiguration">
            <summary>Shim type of Castle.Core.Configuration.MutableConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.#ctor(Castle.Core.Configuration.MutableConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.Bind(Castle.Core.Configuration.IConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AttributeStringString">
            <summary>Sets the shim of MutableConfiguration.Attribute(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.ConstructorString">
            <summary>Sets the shim of MutableConfiguration.MutableConfiguration(String name)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.ConstructorStringString">
            <summary>Sets the shim of MutableConfiguration.MutableConfiguration(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.CreateChildString">
            <summary>Sets the shim of MutableConfiguration.CreateChild(String name)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.CreateChildStringString">
            <summary>Sets the shim of MutableConfiguration.CreateChild(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.CreateString">
            <summary>Sets the shim of MutableConfiguration.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.ValueGet">
            <summary>Sets the shim of MutableConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.ValueSetString">
            <summary>Sets the shim of MutableConfiguration.set_Value(String value)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.AttributeStringString">
            <summary>Sets the shim of MutableConfiguration.Attribute(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.CreateChildString">
            <summary>Sets the shim of MutableConfiguration.CreateChild(String name)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.CreateChildStringString">
            <summary>Sets the shim of MutableConfiguration.CreateChild(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.ValueGet">
            <summary>Sets the shim of MutableConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.ValueSetString">
            <summary>Sets the shim of MutableConfiguration.set_Value(String value)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubAbstractConfiguration">
            <summary>Stub type of Castle.Core.Configuration.AbstractConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.AttributesGet">
            <summary>Sets the stub of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.ChildrenGet">
            <summary>Sets the stub of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.GetValue(System.Type,System.Object)">
            <summary>Sets the stub of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.GetValueTypeObject">
            <summary>Sets the stub of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractConfiguration</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.Attributes">
            <summary>Sets the stub of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.Children">
            <summary>Sets the stub of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection">
            <summary>Stub type of Castle.Core.Configuration.ConfigurationAttributeCollection</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Add(System.String,System.String)">
            <summary>Sets the stub of NameValueCollection.Add(String name, String value)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.AddStringString">
            <summary>Sets the stub of NameValueCollection.Add(String name, String value)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.AllKeysGet">
            <summary>Sets the stub of NameValueCollection.get_AllKeys()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Clear">
            <summary>Sets the stub of NameValueCollection.Clear()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Clear01">
            <summary>Sets the stub of NameValueCollection.Clear()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.CountGet">
            <summary>Sets the stub of NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Get(System.String)">
            <summary>Sets the stub of NameValueCollection.Get(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Get(System.Int32)">
            <summary>Sets the stub of NameValueCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetEnumerator">
            <summary>Sets the stub of NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetEnumerator01">
            <summary>Sets the stub of NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetInt32">
            <summary>Sets the stub of NameValueCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetKey(System.Int32)">
            <summary>Sets the stub of NameValueCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetKeyInt32">
            <summary>Sets the stub of NameValueCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetString">
            <summary>Sets the stub of NameValueCollection.Get(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetValues(System.Int32)">
            <summary>Sets the stub of NameValueCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetValues(System.String)">
            <summary>Sets the stub of NameValueCollection.GetValues(String name)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetValuesInt32">
            <summary>Sets the stub of NameValueCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetValuesString">
            <summary>Sets the stub of NameValueCollection.GetValues(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationAttributeCollection</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.KeysGet">
            <summary>Sets the stub of NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.OnDeserialization(System.Object)">
            <summary>Sets the stub of NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.OnDeserializationObject">
            <summary>Sets the stub of NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Remove(System.String)">
            <summary>Sets the stub of NameValueCollection.Remove(String name)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.RemoveString">
            <summary>Sets the stub of NameValueCollection.Remove(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Set(System.String,System.String)">
            <summary>Sets the stub of NameValueCollection.Set(String name, String value)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.SetStringString">
            <summary>Sets the stub of NameValueCollection.Set(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.AllKeys">
            <summary>Sets the stub of NameValueCollection.get_AllKeys()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Count">
            <summary>Sets the stub of NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Keys">
            <summary>Sets the stub of NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubConfigurationCollection">
            <summary>Stub type of Castle.Core.Configuration.ConfigurationCollection</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationCollection.#ctor(System.Collections.Generic.IEnumerable{Castle.Core.Configuration.IConfiguration})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationCollection.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationCollection</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubIConfiguration">
            <summary>Stub type of Castle.Core.Configuration.IConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubIConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIConfiguration</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.AttributesGet">
            <summary>Sets the stub of IConfiguration.get_Attributes()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#GetValue(System.Type,System.Object)">
            <summary>Sets the stub of IConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.ChildrenGet">
            <summary>Sets the stub of IConfiguration.get_Children()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.GetValueTypeObject">
            <summary>Sets the stub of IConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.NameGet">
            <summary>Sets the stub of IConfiguration.get_Name()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.ValueGet">
            <summary>Sets the stub of IConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#Attributes">
            <summary>Sets the stub of IConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#Children">
            <summary>Sets the stub of IConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#Name">
            <summary>Sets the stub of IConfiguration.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#Value">
            <summary>Sets the stub of IConfiguration.get_Value()</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubMutableConfiguration">
            <summary>Stub type of Castle.Core.Configuration.MutableConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubMutableConfiguration.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubMutableConfiguration.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubMutableConfiguration.AttributesGet">
            <summary>Sets the stub of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubMutableConfiguration.ChildrenGet">
            <summary>Sets the stub of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubMutableConfiguration.GetValue(System.Type,System.Object)">
            <summary>Sets the stub of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubMutableConfiguration.GetValueTypeObject">
            <summary>Sets the stub of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubMutableConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubMutableConfiguration</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.Attributes">
            <summary>Sets the stub of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.Children">
            <summary>Sets the stub of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer">
            <summary>Shim type of Castle.Core.Configuration.Xml.XmlConfigurationDeserializer</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.#ctor(Castle.Core.Configuration.Xml.XmlConfigurationDeserializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.Constructor">
            <summary>Sets the shim of XmlConfigurationDeserializer.XmlConfigurationDeserializer()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.DeserializeXmlNode">
            <summary>Sets the shim of XmlConfigurationDeserializer.Deserialize(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.GetConfigValueString">
            <summary>Sets the shim of XmlConfigurationDeserializer.GetConfigValue(String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.GetDeserializedNodeXmlNode">
            <summary>Sets the shim of XmlConfigurationDeserializer.GetDeserializedNode(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.IsTextNodeXmlNode">
            <summary>Sets the shim of XmlConfigurationDeserializer.IsTextNode(XmlNode node)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.AllInstances.DeserializeXmlNode">
            <summary>Sets the shim of XmlConfigurationDeserializer.Deserialize(XmlNode node)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer">
            <summary>Stub type of Castle.Core.Configuration.Xml.XmlConfigurationDeserializer</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlConfigurationDeserializer</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimCastleComponentAttribute">
            <summary>Shim type of Castle.Core.CastleComponentAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCastleComponentAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCastleComponentAttribute.#ctor(Castle.Core.CastleComponentAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCastleComponentAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCastleComponentAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCastleComponentAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCastleComponentAttribute.ConstructorString">
            <summary>Sets the shim of CastleComponentAttribute.CastleComponentAttribute(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCastleComponentAttribute.ConstructorStringType">
            <summary>Sets the shim of CastleComponentAttribute.CastleComponentAttribute(String key, Type service)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCastleComponentAttribute.ConstructorStringTypeLifestyleType">
            <summary>Sets the shim of CastleComponentAttribute.CastleComponentAttribute(String key, Type service, LifestyleType lifestyle)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCastleComponentAttribute.KeyGet">
            <summary>Sets the shim of CastleComponentAttribute.get_Key()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCastleComponentAttribute.ServiceGet">
            <summary>Sets the shim of CastleComponentAttribute.get_Service()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimCastleComponentAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCastleComponentAttribute.AllInstances.KeyGet">
            <summary>Sets the shim of CastleComponentAttribute.get_Key()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCastleComponentAttribute.AllInstances.ServiceGet">
            <summary>Sets the shim of CastleComponentAttribute.get_Service()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimCollectionExtensions">
            <summary>Shim type of Castle.Core.CollectionExtensions</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCollectionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCollectionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCollectionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCollectionExtensions.ForEachOf1IEnumerableOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>Sets the shim of CollectionExtensions.ForEach(IEnumerable`1&lt;!!0&gt; items, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCollectionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimComponentActivatorAttribute">
            <summary>Shim type of Castle.Core.ComponentActivatorAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentActivatorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentActivatorAttribute.#ctor(Castle.Core.ComponentActivatorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentActivatorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentActivatorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentActivatorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentActivatorAttribute.ComponentActivatorTypeGet">
            <summary>Sets the shim of ComponentActivatorAttribute.get_ComponentActivatorType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentActivatorAttribute.ConstructorType">
            <summary>Sets the shim of ComponentActivatorAttribute.ComponentActivatorAttribute(Type componentActivatorType)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimComponentActivatorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentActivatorAttribute.AllInstances.ComponentActivatorTypeGet">
            <summary>Sets the shim of ComponentActivatorAttribute.get_ComponentActivatorType()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimComponentModel">
            <summary>Shim type of Castle.Core.ComponentModel</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentModel.#ctor(Castle.Core.ComponentModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentModel.Bind(Castle.Core.IVertex)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentModel.RequiresOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of ComponentModel.Requires()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentModel._Requiresb__0Of1PropertySet``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Core.PropertySet,System.Boolean})">
            <summary>Sets the shim of ComponentModel.&lt;Requires&gt;b__0(PropertySet p)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ConfigurationGet">
            <summary>Sets the shim of ComponentModel.get_Configuration()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ConfigurationSetIConfiguration">
            <summary>Sets the shim of ComponentModel.set_Configuration(IConfiguration value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ConstructorStringTypeType">
            <summary>Sets the shim of ComponentModel.ComponentModel(String name, Type service, Type implementation)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ConstructorsGet">
            <summary>Sets the shim of ComponentModel.get_Constructors()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.CustomComponentActivatorGet">
            <summary>Sets the shim of ComponentModel.get_CustomComponentActivator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.CustomComponentActivatorSetType">
            <summary>Sets the shim of ComponentModel.set_CustomComponentActivator(Type value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.CustomDependenciesGet">
            <summary>Sets the shim of ComponentModel.get_CustomDependencies()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.CustomLifestyleGet">
            <summary>Sets the shim of ComponentModel.get_CustomLifestyle()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.CustomLifestyleSetType">
            <summary>Sets the shim of ComponentModel.set_CustomLifestyle(Type value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.DependenciesGet">
            <summary>Sets the shim of ComponentModel.get_Dependencies()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ExtendedPropertiesGet">
            <summary>Sets the shim of ComponentModel.get_ExtendedProperties()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ExtendedPropertiesSetIDictionary">
            <summary>Sets the shim of ComponentModel.set_ExtendedProperties(IDictionary value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ImplementationGet">
            <summary>Sets the shim of ComponentModel.get_Implementation()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ImplementationSetType">
            <summary>Sets the shim of ComponentModel.set_Implementation(Type value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.InspectionBehaviorGet">
            <summary>Sets the shim of ComponentModel.get_InspectionBehavior()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.InspectionBehaviorSetPropertiesInspectionBehavior">
            <summary>Sets the shim of ComponentModel.set_InspectionBehavior(PropertiesInspectionBehavior value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.InterceptorsGet">
            <summary>Sets the shim of ComponentModel.get_Interceptors()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.LifecycleStepsGet">
            <summary>Sets the shim of ComponentModel.get_LifecycleSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.LifestyleTypeGet">
            <summary>Sets the shim of ComponentModel.get_LifestyleType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.LifestyleTypeSetLifestyleType">
            <summary>Sets the shim of ComponentModel.set_LifestyleType(LifestyleType value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.NameGet">
            <summary>Sets the shim of ComponentModel.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.NameSetString">
            <summary>Sets the shim of ComponentModel.set_Name(String value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ParametersGet">
            <summary>Sets the shim of ComponentModel.get_Parameters()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.PropertiesGet">
            <summary>Sets the shim of ComponentModel.get_Properties()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.RequiresGenericArgumentsGet">
            <summary>Sets the shim of ComponentModel.get_RequiresGenericArguments()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.RequiresGenericArgumentsSetBoolean">
            <summary>Sets the shim of ComponentModel.set_RequiresGenericArguments(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.RequiresPredicateOfPropertySetArray">
            <summary>Sets the shim of ComponentModel.Requires(Predicate`1&lt;PropertySet&gt;[] selectors)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ServiceGet">
            <summary>Sets the shim of ComponentModel.get_Service()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.ServiceSetType">
            <summary>Sets the shim of ComponentModel.set_Service(Type value)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimComponentModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentModel.AllInstances.RequiresOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Castle.Core.ComponentModel})">
            <summary>Sets the shim of ComponentModel.Requires()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ConfigurationGet">
            <summary>Sets the shim of ComponentModel.get_Configuration()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ConfigurationSetIConfiguration">
            <summary>Sets the shim of ComponentModel.set_Configuration(IConfiguration value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ConstructorsGet">
            <summary>Sets the shim of ComponentModel.get_Constructors()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.CustomComponentActivatorGet">
            <summary>Sets the shim of ComponentModel.get_CustomComponentActivator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.CustomComponentActivatorSetType">
            <summary>Sets the shim of ComponentModel.set_CustomComponentActivator(Type value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.CustomDependenciesGet">
            <summary>Sets the shim of ComponentModel.get_CustomDependencies()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.CustomLifestyleGet">
            <summary>Sets the shim of ComponentModel.get_CustomLifestyle()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.CustomLifestyleSetType">
            <summary>Sets the shim of ComponentModel.set_CustomLifestyle(Type value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.DependenciesGet">
            <summary>Sets the shim of ComponentModel.get_Dependencies()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ExtendedPropertiesGet">
            <summary>Sets the shim of ComponentModel.get_ExtendedProperties()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ExtendedPropertiesSetIDictionary">
            <summary>Sets the shim of ComponentModel.set_ExtendedProperties(IDictionary value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ImplementationGet">
            <summary>Sets the shim of ComponentModel.get_Implementation()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ImplementationSetType">
            <summary>Sets the shim of ComponentModel.set_Implementation(Type value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.InspectionBehaviorGet">
            <summary>Sets the shim of ComponentModel.get_InspectionBehavior()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.InspectionBehaviorSetPropertiesInspectionBehavior">
            <summary>Sets the shim of ComponentModel.set_InspectionBehavior(PropertiesInspectionBehavior value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.InterceptorsGet">
            <summary>Sets the shim of ComponentModel.get_Interceptors()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.LifecycleStepsGet">
            <summary>Sets the shim of ComponentModel.get_LifecycleSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.LifestyleTypeGet">
            <summary>Sets the shim of ComponentModel.get_LifestyleType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.LifestyleTypeSetLifestyleType">
            <summary>Sets the shim of ComponentModel.set_LifestyleType(LifestyleType value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.NameGet">
            <summary>Sets the shim of ComponentModel.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.NameSetString">
            <summary>Sets the shim of ComponentModel.set_Name(String value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ParametersGet">
            <summary>Sets the shim of ComponentModel.get_Parameters()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.PropertiesGet">
            <summary>Sets the shim of ComponentModel.get_Properties()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.RequiresGenericArgumentsGet">
            <summary>Sets the shim of ComponentModel.get_RequiresGenericArguments()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.RequiresGenericArgumentsSetBoolean">
            <summary>Sets the shim of ComponentModel.set_RequiresGenericArguments(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.RequiresPredicateOfPropertySetArray">
            <summary>Sets the shim of ComponentModel.Requires(Predicate`1&lt;PropertySet&gt;[] selectors)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ServiceGet">
            <summary>Sets the shim of ComponentModel.get_Service()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentModel.AllInstances.ServiceSetType">
            <summary>Sets the shim of ComponentModel.set_Service(Type value)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute">
            <summary>Shim type of Castle.Core.ComponentProxyBehaviorAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.#ctor(Castle.Core.ComponentProxyBehaviorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AdditionalInterfacesGet">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.get_AdditionalInterfaces()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AdditionalInterfacesSetTypeArray">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.set_AdditionalInterfaces(Type[] value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.Constructor">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.ComponentProxyBehaviorAttribute()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.UseMarshalByRefProxyGet">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.get_UseMarshalByRefProxy()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.UseMarshalByRefProxySetBoolean">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.set_UseMarshalByRefProxy(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.UseSingleInterfaceProxyGet">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.get_UseSingleInterfaceProxy()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.UseSingleInterfaceProxySetBoolean">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.set_UseSingleInterfaceProxy(Boolean value)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AllInstances.AdditionalInterfacesGet">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.get_AdditionalInterfaces()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AllInstances.AdditionalInterfacesSetTypeArray">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.set_AdditionalInterfaces(Type[] value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AllInstances.UseMarshalByRefProxyGet">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.get_UseMarshalByRefProxy()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AllInstances.UseMarshalByRefProxySetBoolean">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.set_UseMarshalByRefProxy(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AllInstances.UseSingleInterfaceProxyGet">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.get_UseSingleInterfaceProxy()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimComponentProxyBehaviorAttribute.AllInstances.UseSingleInterfaceProxySetBoolean">
            <summary>Sets the shim of ComponentProxyBehaviorAttribute.set_UseSingleInterfaceProxy(Boolean value)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimConstructorCandidate">
            <summary>Shim type of Castle.Core.ConstructorCandidate</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidate.#ctor(Castle.Core.ConstructorCandidate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidate.ConstructorConstructorInfoDependencyModelArray">
            <summary>Sets the shim of ConstructorCandidate.ConstructorCandidate(ConstructorInfo constructorInfo, DependencyModel[] dependencies)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidate.ConstructorGet">
            <summary>Sets the shim of ConstructorCandidate.get_Constructor()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidate.DependenciesGet">
            <summary>Sets the shim of ConstructorCandidate.get_Dependencies()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimConstructorCandidate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidate.AllInstances.ConstructorGet">
            <summary>Sets the shim of ConstructorCandidate.get_Constructor()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidate.AllInstances.DependenciesGet">
            <summary>Sets the shim of ConstructorCandidate.get_Dependencies()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimConstructorCandidateCollection">
            <summary>Shim type of Castle.Core.ConstructorCandidateCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.#ctor(Castle.Core.ConstructorCandidateCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.Bind(System.Collections.Generic.ICollection{Castle.Core.ConstructorCandidate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.Bind(System.Collections.Generic.IEnumerable{Castle.Core.ConstructorCandidate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimConstructorCandidateCollection.Bind(System.Collections.Generic.IList{Castle.Core.ConstructorCandidate})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidateCollection.AddConstructorCandidate">
            <summary>Sets the shim of ConstructorCandidateCollection.Add(ConstructorCandidate item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidateCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidateCollection.Constructor">
            <summary>Sets the shim of ConstructorCandidateCollection.ConstructorCandidateCollection()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidateCollection.FewerArgumentsCandidateGet">
            <summary>Sets the shim of ConstructorCandidateCollection.get_FewerArgumentsCandidate()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidateCollection.HasAmbiguousFewerArgumentsCandidateGet">
            <summary>Sets the shim of ConstructorCandidateCollection.get_HasAmbiguousFewerArgumentsCandidate()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimConstructorCandidateCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidateCollection.AllInstances.AddConstructorCandidate">
            <summary>Sets the shim of ConstructorCandidateCollection.Add(ConstructorCandidate item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidateCollection.AllInstances.FewerArgumentsCandidateGet">
            <summary>Sets the shim of ConstructorCandidateCollection.get_FewerArgumentsCandidate()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimConstructorCandidateCollection.AllInstances.HasAmbiguousFewerArgumentsCandidateGet">
            <summary>Sets the shim of ConstructorCandidateCollection.get_HasAmbiguousFewerArgumentsCandidate()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimCustomLifestyleAttribute">
            <summary>Shim type of Castle.Core.CustomLifestyleAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCustomLifestyleAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCustomLifestyleAttribute.#ctor(Castle.Core.CustomLifestyleAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCustomLifestyleAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimCustomLifestyleAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCustomLifestyleAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCustomLifestyleAttribute.ConstructorType">
            <summary>Sets the shim of CustomLifestyleAttribute.CustomLifestyleAttribute(Type lifestyleHandlerType)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCustomLifestyleAttribute.LifestyleHandlerTypeGet">
            <summary>Sets the shim of CustomLifestyleAttribute.get_LifestyleHandlerType()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimCustomLifestyleAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimCustomLifestyleAttribute.AllInstances.LifestyleHandlerTypeGet">
            <summary>Sets the shim of CustomLifestyleAttribute.get_LifestyleHandlerType()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimDependencyModel">
            <summary>Shim type of Castle.Core.DependencyModel</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModel.#ctor(Castle.Core.DependencyModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.ConstructorDependencyTypeStringTypeBoolean">
            <summary>Sets the shim of DependencyModel.DependencyModel(DependencyType type, String dependencyKey, Type targetType, Boolean isOptional)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.DependencyKeyGet">
            <summary>Sets the shim of DependencyModel.get_DependencyKey()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.DependencyKeySetString">
            <summary>Sets the shim of DependencyModel.set_DependencyKey(String value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.DependencyTypeGet">
            <summary>Sets the shim of DependencyModel.get_DependencyType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.DependencyTypeSetDependencyType">
            <summary>Sets the shim of DependencyModel.set_DependencyType(DependencyType value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.EqualsObject">
            <summary>Sets the shim of DependencyModel.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.GetHashCode">
            <summary>Sets the shim of DependencyModel.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.IsOptionalGet">
            <summary>Sets the shim of DependencyModel.get_IsOptional()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.IsOptionalSetBoolean">
            <summary>Sets the shim of DependencyModel.set_IsOptional(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.TargetTypeGet">
            <summary>Sets the shim of DependencyModel.get_TargetType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.ToString">
            <summary>Sets the shim of DependencyModel.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimDependencyModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.DependencyKeyGet">
            <summary>Sets the shim of DependencyModel.get_DependencyKey()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.DependencyKeySetString">
            <summary>Sets the shim of DependencyModel.set_DependencyKey(String value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.DependencyTypeGet">
            <summary>Sets the shim of DependencyModel.get_DependencyType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.DependencyTypeSetDependencyType">
            <summary>Sets the shim of DependencyModel.set_DependencyType(DependencyType value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.EqualsObject">
            <summary>Sets the shim of DependencyModel.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.GetHashCode01">
            <summary>Sets the shim of DependencyModel.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.IsOptionalGet">
            <summary>Sets the shim of DependencyModel.get_IsOptional()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.IsOptionalSetBoolean">
            <summary>Sets the shim of DependencyModel.set_IsOptional(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.TargetTypeGet">
            <summary>Sets the shim of DependencyModel.get_TargetType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModel.AllInstances.ToString01">
            <summary>Sets the shim of DependencyModel.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimDependencyModelCollection">
            <summary>Shim type of Castle.Core.DependencyModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.#ctor(Castle.Core.DependencyModelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.Bind(System.Collections.Generic.ICollection{Castle.Core.DependencyModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.Bind(System.Collections.Generic.IEnumerable{Castle.Core.DependencyModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDependencyModelCollection.Bind(System.Collections.Generic.IList{Castle.Core.DependencyModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModelCollection.AddRangeDependencyModelCollection">
            <summary>Sets the shim of DependencyModelCollection.AddRange(DependencyModelCollection dependencies)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModelCollection.Constructor">
            <summary>Sets the shim of DependencyModelCollection.DependencyModelCollection()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModelCollection.ConstructorIEnumerableOfDependencyModel">
            <summary>Sets the shim of DependencyModelCollection.DependencyModelCollection(IEnumerable`1&lt;DependencyModel&gt; dependencies)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimDependencyModelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDependencyModelCollection.AllInstances.AddRangeDependencyModelCollection">
            <summary>Sets the shim of DependencyModelCollection.AddRange(DependencyModelCollection dependencies)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimDoNotWireAttribute">
            <summary>Shim type of Castle.Core.DoNotWireAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDoNotWireAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDoNotWireAttribute.#ctor(Castle.Core.DoNotWireAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDoNotWireAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimDoNotWireAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDoNotWireAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimDoNotWireAttribute.Constructor">
            <summary>Sets the shim of DoNotWireAttribute.DoNotWireAttribute()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimDoNotWireAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimGraphNode">
            <summary>Shim type of Castle.Core.GraphNode</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimGraphNode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimGraphNode.#ctor(Castle.Core.GraphNode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimGraphNode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimGraphNode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimGraphNode.Bind(Castle.Core.IVertex)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AddDependentGraphNode">
            <summary>Sets the shim of GraphNode.AddDependent(GraphNode node)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AdjacenciesGet">
            <summary>Sets the shim of GraphNode.get_Adjacencies()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.Constructor">
            <summary>Sets the shim of GraphNode.GraphNode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.DependentsGet">
            <summary>Sets the shim of GraphNode.get_Dependents()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.DependersGet">
            <summary>Sets the shim of GraphNode.get_Dependers()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.IncomingGet">
            <summary>Sets the shim of GraphNode.get_Incoming()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.OutgoingGet">
            <summary>Sets the shim of GraphNode.get_Outgoing()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.RemoveDependentGraphNode">
            <summary>Sets the shim of GraphNode.RemoveDependent(GraphNode graphNode)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.RemoveDependerGraphNode">
            <summary>Sets the shim of GraphNode.RemoveDepender(GraphNode depender)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimGraphNode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AllInstances.AddDependentGraphNode">
            <summary>Sets the shim of GraphNode.AddDependent(GraphNode node)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AllInstances.AdjacenciesGet">
            <summary>Sets the shim of GraphNode.get_Adjacencies()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AllInstances.DependentsGet">
            <summary>Sets the shim of GraphNode.get_Dependents()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AllInstances.DependersGet">
            <summary>Sets the shim of GraphNode.get_Dependers()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AllInstances.IncomingGet">
            <summary>Sets the shim of GraphNode.get_Incoming()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AllInstances.OutgoingGet">
            <summary>Sets the shim of GraphNode.get_Outgoing()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AllInstances.RemoveDependentGraphNode">
            <summary>Sets the shim of GraphNode.RemoveDependent(GraphNode graphNode)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimGraphNode.AllInstances.RemoveDependerGraphNode">
            <summary>Sets the shim of GraphNode.RemoveDepender(GraphNode depender)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimInterceptorAttribute">
            <summary>Shim type of Castle.Core.InterceptorAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorAttribute.#ctor(Castle.Core.InterceptorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorAttribute.ConstructorString">
            <summary>Sets the shim of InterceptorAttribute.InterceptorAttribute(String componentKey)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorAttribute.ConstructorType">
            <summary>Sets the shim of InterceptorAttribute.InterceptorAttribute(Type interceptorType)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorAttribute.InterceptorGet">
            <summary>Sets the shim of InterceptorAttribute.get_Interceptor()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimInterceptorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorAttribute.AllInstances.InterceptorGet">
            <summary>Sets the shim of InterceptorAttribute.get_Interceptor()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimInterceptorReference">
            <summary>Shim type of Castle.Core.InterceptorReference</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReference.#ctor(Castle.Core.InterceptorReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReference.Bind(System.IEquatable{Castle.Core.InterceptorReference})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReference.ForTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Core.InterceptorReference})">
            <summary>Sets the shim of InterceptorReference.ForType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.ComponentKeyGet">
            <summary>Sets the shim of InterceptorReference.get_ComponentKey()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.ConstructorString">
            <summary>Sets the shim of InterceptorReference.InterceptorReference(String componentKey)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.ConstructorType">
            <summary>Sets the shim of InterceptorReference.InterceptorReference(Type serviceType)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.EqualsInterceptorReference">
            <summary>Sets the shim of InterceptorReference.Equals(InterceptorReference other)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.EqualsObject">
            <summary>Sets the shim of InterceptorReference.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.ForKeyString">
            <summary>Sets the shim of InterceptorReference.ForKey(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.ForTypeType">
            <summary>Sets the shim of InterceptorReference.ForType(Type service)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.GetHashCode">
            <summary>Sets the shim of InterceptorReference.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.ReferenceTypeGet">
            <summary>Sets the shim of InterceptorReference.get_ReferenceType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.ServiceTypeGet">
            <summary>Sets the shim of InterceptorReference.get_ServiceType()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimInterceptorReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.AllInstances.ComponentKeyGet">
            <summary>Sets the shim of InterceptorReference.get_ComponentKey()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.AllInstances.EqualsInterceptorReference">
            <summary>Sets the shim of InterceptorReference.Equals(InterceptorReference other)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.AllInstances.EqualsObject">
            <summary>Sets the shim of InterceptorReference.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.AllInstances.GetHashCode01">
            <summary>Sets the shim of InterceptorReference.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.AllInstances.ReferenceTypeGet">
            <summary>Sets the shim of InterceptorReference.get_ReferenceType()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReference.AllInstances.ServiceTypeGet">
            <summary>Sets the shim of InterceptorReference.get_ServiceType()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimInterceptorReferenceCollection">
            <summary>Shim type of Castle.Core.InterceptorReferenceCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReferenceCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReferenceCollection.#ctor(Castle.Core.InterceptorReferenceCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReferenceCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReferenceCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReferenceCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReferenceCollection.Bind(System.Collections.Generic.ICollection{Castle.Core.InterceptorReference})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimInterceptorReferenceCollection.Bind(System.Collections.Generic.IEnumerable{Castle.Core.InterceptorReference})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AddFirstInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.AddFirst(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AddIfNotInCollectionInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.AddIfNotInCollection(InterceptorReference interceptorReference)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AddInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.Add(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AddLastInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.AddLast(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.Clear">
            <summary>Sets the shim of InterceptorReferenceCollection.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.Constructor">
            <summary>Sets the shim of InterceptorReferenceCollection.InterceptorReferenceCollection()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.ContainsInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.Contains(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.CopyToArrayInt32">
            <summary>Sets the shim of InterceptorReferenceCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.CopyToInterceptorReferenceArrayInt32">
            <summary>Sets the shim of InterceptorReferenceCollection.CopyTo(InterceptorReference[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.CountGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.GetEnumerator">
            <summary>Sets the shim of InterceptorReferenceCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.HasInterceptorsGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_HasInterceptors()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.InsertInt32InterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.Insert(Int32 index, InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.IsReadOnlyGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.IsSynchronizedGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.RemoveInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.Remove(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.SyncRootGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.SystemCollectionsGenericIEnumerableCastleCoreInterceptorReferenceGetEnumerator">
            <summary>Sets the shim of InterceptorReferenceCollection.System.Collections.Generic.IEnumerable&lt;Castle.Core.InterceptorReference&gt;.GetEnumerator()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.AddFirstInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.AddFirst(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.AddIfNotInCollectionInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.AddIfNotInCollection(InterceptorReference interceptorReference)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.AddInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.Add(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.AddLastInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.AddLast(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.Clear">
            <summary>Sets the shim of InterceptorReferenceCollection.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.ContainsInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.Contains(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of InterceptorReferenceCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.CopyToInterceptorReferenceArrayInt32">
            <summary>Sets the shim of InterceptorReferenceCollection.CopyTo(InterceptorReference[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.CountGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of InterceptorReferenceCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.HasInterceptorsGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_HasInterceptors()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.InsertInt32InterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.Insert(Int32 index, InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.RemoveInterceptorReference">
            <summary>Sets the shim of InterceptorReferenceCollection.Remove(InterceptorReference item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of InterceptorReferenceCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimInterceptorReferenceCollection.AllInstances.SystemCollectionsGenericIEnumerableCastleCoreInterceptorReferenceGetEnumerator">
            <summary>Sets the shim of InterceptorReferenceCollection.System.Collections.Generic.IEnumerable&lt;Castle.Core.InterceptorReference&gt;.GetEnumerator()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimLifecycleStepCollection">
            <summary>Shim type of Castle.Core.LifecycleStepCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifecycleStepCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifecycleStepCollection.#ctor(Castle.Core.LifecycleStepCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifecycleStepCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifecycleStepCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifecycleStepCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifecycleStepCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AddFirstLifecycleStepTypeObject">
            <summary>Sets the shim of LifecycleStepCollection.AddFirst(LifecycleStepType type, Object stepImplementation)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AddLifecycleStepTypeObject">
            <summary>Sets the shim of LifecycleStepCollection.Add(LifecycleStepType type, Object stepImplementation)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.Constructor">
            <summary>Sets the shim of LifecycleStepCollection.LifecycleStepCollection()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.CopyToArrayInt32">
            <summary>Sets the shim of LifecycleStepCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.CountGet">
            <summary>Sets the shim of LifecycleStepCollection.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.GetCommissionSteps">
            <summary>Sets the shim of LifecycleStepCollection.GetCommissionSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.GetDecommissionSteps">
            <summary>Sets the shim of LifecycleStepCollection.GetDecommissionSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.GetEnumerator">
            <summary>Sets the shim of LifecycleStepCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.HasCommissionStepsGet">
            <summary>Sets the shim of LifecycleStepCollection.get_HasCommissionSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.HasDecommissionStepsGet">
            <summary>Sets the shim of LifecycleStepCollection.get_HasDecommissionSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.IsSynchronizedGet">
            <summary>Sets the shim of LifecycleStepCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.StaticConstructor">
            <summary>Sets the shim of LifecycleStepCollection.LifecycleStepCollection()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.SyncRootGet">
            <summary>Sets the shim of LifecycleStepCollection.get_SyncRoot()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.AddFirstLifecycleStepTypeObject">
            <summary>Sets the shim of LifecycleStepCollection.AddFirst(LifecycleStepType type, Object stepImplementation)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.AddLifecycleStepTypeObject">
            <summary>Sets the shim of LifecycleStepCollection.Add(LifecycleStepType type, Object stepImplementation)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of LifecycleStepCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.CountGet">
            <summary>Sets the shim of LifecycleStepCollection.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.GetCommissionSteps">
            <summary>Sets the shim of LifecycleStepCollection.GetCommissionSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.GetDecommissionSteps">
            <summary>Sets the shim of LifecycleStepCollection.GetDecommissionSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of LifecycleStepCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.HasCommissionStepsGet">
            <summary>Sets the shim of LifecycleStepCollection.get_HasCommissionSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.HasDecommissionStepsGet">
            <summary>Sets the shim of LifecycleStepCollection.get_HasDecommissionSteps()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of LifecycleStepCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifecycleStepCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of LifecycleStepCollection.get_SyncRoot()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimLifestyleAttribute">
            <summary>Shim type of Castle.Core.LifestyleAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifestyleAttribute.#ctor(Castle.Core.LifestyleAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifestyleAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimLifestyleAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifestyleAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifestyleAttribute.ConstructorLifestyleType">
            <summary>Sets the shim of LifestyleAttribute.LifestyleAttribute(LifestyleType type)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifestyleAttribute.LifestyleGet">
            <summary>Sets the shim of LifestyleAttribute.get_Lifestyle()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifestyleAttribute.LifestyleSetLifestyleType">
            <summary>Sets the shim of LifestyleAttribute.set_Lifestyle(LifestyleType value)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimLifestyleAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifestyleAttribute.AllInstances.LifestyleGet">
            <summary>Sets the shim of LifestyleAttribute.get_Lifestyle()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimLifestyleAttribute.AllInstances.LifestyleSetLifestyleType">
            <summary>Sets the shim of LifestyleAttribute.set_Lifestyle(LifestyleType value)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimMethodMetaModel">
            <summary>Shim type of Castle.Core.MethodMetaModel</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModel.#ctor(Castle.Core.MethodMetaModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimMethodMetaModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimMethodMetaModel.ConfigNodeGet">
            <summary>Sets the shim of MethodMetaModel.get_ConfigNode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimMethodMetaModel.ConstructorIConfiguration">
            <summary>Sets the shim of MethodMetaModel.MethodMetaModel(IConfiguration configNode)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimMethodMetaModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimMethodMetaModel.AllInstances.ConfigNodeGet">
            <summary>Sets the shim of MethodMetaModel.get_ConfigNode()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimMethodMetaModelCollection">
            <summary>Shim type of Castle.Core.MethodMetaModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.#ctor(Castle.Core.MethodMetaModelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.Bind(System.Collections.Generic.ICollection{Castle.Core.MethodMetaModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.Bind(System.Collections.Generic.IEnumerable{Castle.Core.MethodMetaModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimMethodMetaModelCollection.Bind(System.Collections.Generic.IList{Castle.Core.MethodMetaModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimMethodMetaModelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimMethodMetaModelCollection.Constructor">
            <summary>Sets the shim of MethodMetaModelCollection.MethodMetaModelCollection()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimMethodMetaModelCollection.MethodInfo2ModelGet">
            <summary>Sets the shim of MethodMetaModelCollection.get_MethodInfo2Model()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimMethodMetaModelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimMethodMetaModelCollection.AllInstances.MethodInfo2ModelGet">
            <summary>Sets the shim of MethodMetaModelCollection.get_MethodInfo2Model()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPair`2">
            <summary>Shim type of Castle.Core.Pair`2</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.#ctor(Castle.Core.Pair{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.Bind(System.IEquatable{Castle.Core.Pair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.ConstructorT0T1">
            <summary>Sets the shim of Pair`2.Pair`2(!0 first, !1 second)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.EqualsObject">
            <summary>Sets the shim of Pair`2.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.EqualsPairOfT0T1">
            <summary>Sets the shim of Pair`2.Equals(Pair`2&lt;!0,!1&gt; other)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.FirstGet">
            <summary>Sets the shim of Pair`2.get_First()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.GetHashCode">
            <summary>Sets the shim of Pair`2.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.SecondGet">
            <summary>Sets the shim of Pair`2.get_Second()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.ToString">
            <summary>Sets the shim of Pair`2.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPair`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.EqualsObject">
            <summary>Sets the shim of Pair`2.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.EqualsPairOfT0T1">
            <summary>Sets the shim of Pair`2.Equals(Pair`2&lt;!0,!1&gt; other)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.FirstGet">
            <summary>Sets the shim of Pair`2.get_First()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of Pair`2.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.SecondGet">
            <summary>Sets the shim of Pair`2.get_Second()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.ToString01">
            <summary>Sets the shim of Pair`2.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimParameterModel">
            <summary>Shim type of Castle.Core.ParameterModel</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModel.#ctor(Castle.Core.ParameterModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.ConfigValueGet">
            <summary>Sets the shim of ParameterModel.get_ConfigValue()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.ConstructorStringIConfiguration">
            <summary>Sets the shim of ParameterModel.ParameterModel(String name, IConfiguration value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.ConstructorStringString">
            <summary>Sets the shim of ParameterModel.ParameterModel(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.NameGet">
            <summary>Sets the shim of ParameterModel.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.ValueGet">
            <summary>Sets the shim of ParameterModel.get_Value()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimParameterModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.AllInstances.ConfigValueGet">
            <summary>Sets the shim of ParameterModel.get_ConfigValue()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.AllInstances.NameGet">
            <summary>Sets the shim of ParameterModel.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModel.AllInstances.ValueGet">
            <summary>Sets the shim of ParameterModel.get_Value()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimParameterModelCollection">
            <summary>Shim type of Castle.Core.ParameterModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.#ctor(Castle.Core.ParameterModelCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.Bind(System.Collections.Generic.ICollection{Castle.Core.ParameterModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.Bind(System.Collections.Generic.IEnumerable{Castle.Core.ParameterModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimParameterModelCollection.Bind(System.Collections.Generic.IList{Castle.Core.ParameterModel})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AddObjectObject">
            <summary>Sets the shim of ParameterModelCollection.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AddStringIConfiguration">
            <summary>Sets the shim of ParameterModelCollection.Add(String name, IConfiguration configNode)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AddStringString">
            <summary>Sets the shim of ParameterModelCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.Clear">
            <summary>Sets the shim of ParameterModelCollection.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.Constructor">
            <summary>Sets the shim of ParameterModelCollection.ParameterModelCollection()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.ContainsObject">
            <summary>Sets the shim of ParameterModelCollection.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.CopyToArrayInt32">
            <summary>Sets the shim of ParameterModelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.CountGet">
            <summary>Sets the shim of ParameterModelCollection.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.GetEnumerator">
            <summary>Sets the shim of ParameterModelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.IsFixedSizeGet">
            <summary>Sets the shim of ParameterModelCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.IsReadOnlyGet">
            <summary>Sets the shim of ParameterModelCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.IsSynchronizedGet">
            <summary>Sets the shim of ParameterModelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.ItemGetObject">
            <summary>Sets the shim of ParameterModelCollection.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.KeysGet">
            <summary>Sets the shim of ParameterModelCollection.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.RemoveObject">
            <summary>Sets the shim of ParameterModelCollection.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.SyncRootGet">
            <summary>Sets the shim of ParameterModelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.ValuesGet">
            <summary>Sets the shim of ParameterModelCollection.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.AddObjectObject">
            <summary>Sets the shim of ParameterModelCollection.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.AddStringIConfiguration">
            <summary>Sets the shim of ParameterModelCollection.Add(String name, IConfiguration configNode)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.AddStringString">
            <summary>Sets the shim of ParameterModelCollection.Add(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.Clear">
            <summary>Sets the shim of ParameterModelCollection.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.ContainsObject">
            <summary>Sets the shim of ParameterModelCollection.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of ParameterModelCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.CountGet">
            <summary>Sets the shim of ParameterModelCollection.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ParameterModelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of ParameterModelCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ParameterModelCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of ParameterModelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.ItemGetObject">
            <summary>Sets the shim of ParameterModelCollection.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.KeysGet">
            <summary>Sets the shim of ParameterModelCollection.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.RemoveObject">
            <summary>Sets the shim of ParameterModelCollection.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of ParameterModelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimParameterModelCollection.AllInstances.ValuesGet">
            <summary>Sets the shim of ParameterModelCollection.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPerThreadAttribute">
            <summary>Shim type of Castle.Core.PerThreadAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPerThreadAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPerThreadAttribute.#ctor(Castle.Core.PerThreadAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPerThreadAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPerThreadAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPerThreadAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPerThreadAttribute.Constructor">
            <summary>Sets the shim of PerThreadAttribute.PerThreadAttribute()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPerThreadAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPerWebRequestAttribute">
            <summary>Shim type of Castle.Core.PerWebRequestAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPerWebRequestAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPerWebRequestAttribute.#ctor(Castle.Core.PerWebRequestAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPerWebRequestAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPerWebRequestAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPerWebRequestAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPerWebRequestAttribute.Constructor">
            <summary>Sets the shim of PerWebRequestAttribute.PerWebRequestAttribute()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPerWebRequestAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPooledAttribute">
            <summary>Shim type of Castle.Core.PooledAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPooledAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPooledAttribute.#ctor(Castle.Core.PooledAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPooledAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPooledAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPooledAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPooledAttribute.Constructor">
            <summary>Sets the shim of PooledAttribute.PooledAttribute()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPooledAttribute.ConstructorInt32Int32">
            <summary>Sets the shim of PooledAttribute.PooledAttribute(Int32 initialPoolSize, Int32 maxPoolSize)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPooledAttribute.InitialPoolSizeGet">
            <summary>Sets the shim of PooledAttribute.get_InitialPoolSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPooledAttribute.MaxPoolSizeGet">
            <summary>Sets the shim of PooledAttribute.get_MaxPoolSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPooledAttribute.StaticConstructor">
            <summary>Sets the shim of PooledAttribute.PooledAttribute()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPooledAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPooledAttribute.AllInstances.InitialPoolSizeGet">
            <summary>Sets the shim of PooledAttribute.get_InitialPoolSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPooledAttribute.AllInstances.MaxPoolSizeGet">
            <summary>Sets the shim of PooledAttribute.get_MaxPoolSize()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPropertySet">
            <summary>Shim type of Castle.Core.PropertySet</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySet.#ctor(Castle.Core.PropertySet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySet.ConstructorPropertyInfoDependencyModel">
            <summary>Sets the shim of PropertySet.PropertySet(PropertyInfo propertyInfo, DependencyModel dependency)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySet.DependencyGet">
            <summary>Sets the shim of PropertySet.get_Dependency()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySet.PropertyGet">
            <summary>Sets the shim of PropertySet.get_Property()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPropertySet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySet.AllInstances.DependencyGet">
            <summary>Sets the shim of PropertySet.get_Dependency()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySet.AllInstances.PropertyGet">
            <summary>Sets the shim of PropertySet.get_Property()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPropertySetCollection">
            <summary>Shim type of Castle.Core.PropertySetCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.#ctor(Castle.Core.PropertySetCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.Bind(System.Collections.Generic.ICollection{Castle.Core.PropertySet})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.Bind(System.Collections.Generic.IEnumerable{Castle.Core.PropertySet})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPropertySetCollection.Bind(System.Collections.Generic.IList{Castle.Core.PropertySet})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySetCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySetCollection.Constructor">
            <summary>Sets the shim of PropertySetCollection.PropertySetCollection()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySetCollection.FindByPropertyInfoPropertyInfo">
            <summary>Sets the shim of PropertySetCollection.FindByPropertyInfo(PropertyInfo info)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPropertySetCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPropertySetCollection.AllInstances.FindByPropertyInfoPropertyInfo">
            <summary>Sets the shim of PropertySetCollection.FindByPropertyInfo(PropertyInfo info)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimProxyServices">
            <summary>Shim type of Castle.Core.ProxyServices</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimProxyServices.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimProxyServices.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimProxyServices.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimProxyServices.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimProxyServices.IsDynamicProxyType">
            <summary>Sets the shim of ProxyServices.IsDynamicProxy(Type type)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter">
            <summary>Shim type of Castle.Core.ReflectionBasedDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.#ctor(Castle.Core.ReflectionBasedDictionaryAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AddObjectObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Clear">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ConstructorObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.ReflectionBasedDictionaryAdapter(Object target)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ContainsObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.CopyToArrayInt32">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.CountGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.GetEnumerator">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.IsFixedSizeGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.IsReadOnlyGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.IsSynchronizedGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ItemGetObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ItemSetObjectObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.KeysGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.RemoveObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.SyncRootGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ValuesGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.AddObjectObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.Clear">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.ContainsObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.CountGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.GetEnumerator">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.ItemGetObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.ItemSetObjectObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.KeysGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.RemoveObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.SyncRootGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.ValuesGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimSingletonAttribute">
            <summary>Shim type of Castle.Core.SingletonAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimSingletonAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimSingletonAttribute.#ctor(Castle.Core.SingletonAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimSingletonAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimSingletonAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimSingletonAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimSingletonAttribute.Constructor">
            <summary>Sets the shim of SingletonAttribute.SingletonAttribute()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimSingletonAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter">
            <summary>Shim type of Castle.Core.StringObjectDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.#ctor(Castle.Core.StringObjectDictionaryAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AddObjectObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Clear">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ConstructorIDictionary">
            <summary>Sets the shim of StringObjectDictionaryAdapter.StringObjectDictionaryAdapter(IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ContainsObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.CopyToArrayInt32">
            <summary>Sets the shim of StringObjectDictionaryAdapter.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.CountGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.GetEnumerator">
            <summary>Sets the shim of StringObjectDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.IsFixedSizeGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.IsReadOnlyGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.IsSynchronizedGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ItemGetObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ItemSetObjectObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectgetString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Item(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectsetStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.KeysGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.KeysSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.RemoveObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SyncRootGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectAddKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectCopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectRemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIDictionarySystemStringSystemObjectAddStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Add(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIDictionarySystemStringSystemObjectContainsKeyString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.ContainsKey(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIDictionarySystemStringSystemObjectRemoveString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Remove(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIDictionarySystemStringSystemObjectTryGetValueStringObjectOut">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairSystemStringSystemObjectGetEnumerator">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ValuesGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ValuesSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.AddObjectObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.Clear">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ContainsObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of StringObjectDictionaryAdapter.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.CountGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.GetEnumerator">
            <summary>Sets the shim of StringObjectDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ItemGetObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ItemSetObjectObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectgetString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Item(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectsetStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.KeysGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.KeysSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.RemoveObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SyncRootGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectAddKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectCopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectRemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectAddStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Add(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectContainsKeyString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.ContainsKey(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectRemoveString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Remove(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectTryGetValueStringObjectOut">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairSystemStringSystemObjectGetEnumerator">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ValuesGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ValuesSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimTransientAttribute">
            <summary>Shim type of Castle.Core.TransientAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimTransientAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimTransientAttribute.#ctor(Castle.Core.TransientAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimTransientAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimTransientAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimTransientAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimTransientAttribute.Constructor">
            <summary>Sets the shim of TransientAttribute.TransientAttribute()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimTransientAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubCastleComponentAttribute">
            <summary>Stub type of Castle.Core.CastleComponentAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubCastleComponentAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubCastleComponentAttribute.#ctor(System.String,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubCastleComponentAttribute.#ctor(System.String,System.Type,Castle.Core.LifestyleType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubCastleComponentAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubCastleComponentAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubCastleComponentAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubCastleComponentAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubCastleComponentAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCastleComponentAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubCastleComponentAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubCastleComponentAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubCastleComponentAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubCastleComponentAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubCastleComponentAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubCastleComponentAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubCastleComponentAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubCastleComponentAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubCastleComponentAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubConstructorCandidate">
            <summary>Stub type of Castle.Core.ConstructorCandidate</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubConstructorCandidate.#ctor(System.Reflection.ConstructorInfo,Castle.Core.DependencyModel[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubConstructorCandidate.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorCandidate</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubConstructorCandidate.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubConstructorCandidate.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubConstructorCandidate.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubConstructorCandidateCollection">
            <summary>Stub type of Castle.Core.ConstructorCandidateCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubConstructorCandidateCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubConstructorCandidateCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubConstructorCandidateCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubConstructorCandidateCollection.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorCandidateCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubConstructorCandidateCollection.InsertItem(System.Int32,Castle.Core.ConstructorCandidate)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubConstructorCandidateCollection.InsertItemInt32ConstructorCandidate">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubConstructorCandidateCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubConstructorCandidateCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubConstructorCandidateCollection.SetItem(System.Int32,Castle.Core.ConstructorCandidate)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubConstructorCandidateCollection.SetItemInt32ConstructorCandidate">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubConstructorCandidateCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubConstructorCandidateCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubConstructorCandidateCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubDependencyModel">
            <summary>Stub type of Castle.Core.DependencyModel</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModel.#ctor(Castle.Core.DependencyType,System.String,System.Type,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModel.Equals(System.Object)">
            <summary>Sets the stub of DependencyModel.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubDependencyModel.EqualsObject">
            <summary>Sets the stub of DependencyModel.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModel.GetHashCode">
            <summary>Sets the stub of DependencyModel.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubDependencyModel.GetHashCode01">
            <summary>Sets the stub of DependencyModel.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModel.InitializeStub">
            <summary>Initializes a new instance of type StubDependencyModel</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModel.ToString">
            <summary>Sets the stub of DependencyModel.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubDependencyModel.ToString01">
            <summary>Sets the stub of DependencyModel.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubDependencyModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubDependencyModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubDependencyModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubDependencyModelCollection">
            <summary>Stub type of Castle.Core.DependencyModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModelCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModelCollection.#ctor(System.Collections.Generic.IEnumerable{Castle.Core.DependencyModel})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModelCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubDependencyModelCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModelCollection.InitializeStub">
            <summary>Initializes a new instance of type StubDependencyModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModelCollection.InsertItem(System.Int32,Castle.Core.DependencyModel)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubDependencyModelCollection.InsertItemInt32DependencyModel">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModelCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubDependencyModelCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubDependencyModelCollection.SetItem(System.Int32,Castle.Core.DependencyModel)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubDependencyModelCollection.SetItemInt32DependencyModel">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubDependencyModelCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubDependencyModelCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubDependencyModelCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubGraphNode">
            <summary>Stub type of Castle.Core.GraphNode</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubGraphNode.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubGraphNode.InitializeStub">
            <summary>Initializes a new instance of type StubGraphNode</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubGraphNode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubGraphNode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubGraphNode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIInitializable">
            <summary>Stub type of Castle.Core.IInitializable</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIInitializable.#ctor">
            <summary>Initializes a new instance of type StubIInitializable</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIInitializable.cc::Castle#Core#IInitializable#Initialize">
            <summary>Sets the stub of IInitializable.Initialize()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIInitializable.Initialize">
            <summary>Sets the stub of IInitializable.Initialize()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIRecyclable">
            <summary>Stub type of Castle.Core.IRecyclable</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIRecyclable.#ctor">
            <summary>Initializes a new instance of type StubIRecyclable</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIRecyclable.cc::Castle#Core#IRecyclable#Recycle">
            <summary>Sets the stub of IRecyclable.Recycle()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIRecyclable.Recycle">
            <summary>Sets the stub of IRecyclable.Recycle()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIServiceEnabledComponent">
            <summary>Stub type of Castle.Core.IServiceEnabledComponent</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceEnabledComponent.#ctor">
            <summary>Initializes a new instance of type StubIServiceEnabledComponent</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceEnabledComponent.cc::Castle#Core#IServiceEnabledComponent#Service(System.IServiceProvider)">
            <summary>Sets the stub of IServiceEnabledComponent.Service(IServiceProvider provider)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIServiceEnabledComponent.ServiceIServiceProvider">
            <summary>Sets the stub of IServiceEnabledComponent.Service(IServiceProvider provider)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIServiceProviderEx">
            <summary>Stub type of Castle.Core.IServiceProviderEx</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderEx.#ctor">
            <summary>Initializes a new instance of type StubIServiceProviderEx</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderEx.cc::Castle#Core#IServiceProviderEx#GetService``1">
            <summary>Sets the stub of IServiceProviderEx.GetService()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderEx.GetServiceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetService()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIServiceProviderEx.GetServiceType">
            <summary>Sets the stub of IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderEx.global::System#IServiceProvider#GetService(System.Type)">
            <summary>Sets the stub of IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIServiceProviderExAccessor">
            <summary>Stub type of Castle.Core.IServiceProviderExAccessor</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderExAccessor.#ctor">
            <summary>Initializes a new instance of type StubIServiceProviderExAccessor</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIServiceProviderExAccessor.ServiceProviderGet">
            <summary>Sets the stub of IServiceProviderExAccessor.get_ServiceProvider()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubIServiceProviderExAccessor.cc::Castle#Core#IServiceProviderExAccessor#ServiceProvider">
            <summary>Sets the stub of IServiceProviderExAccessor.get_ServiceProvider()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIStartable">
            <summary>Stub type of Castle.Core.IStartable</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIStartable.#ctor">
            <summary>Initializes a new instance of type StubIStartable</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIStartable.cc::Castle#Core#IStartable#Start">
            <summary>Sets the stub of IStartable.Start()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIStartable.cc::Castle#Core#IStartable#Stop">
            <summary>Sets the stub of IStartable.Stop()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIStartable.Start">
            <summary>Sets the stub of IStartable.Start()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIStartable.Stop">
            <summary>Sets the stub of IStartable.Stop()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIVertex">
            <summary>Stub type of Castle.Core.IVertex</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIVertex.#ctor">
            <summary>Initializes a new instance of type StubIVertex</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIVertex.AdjacenciesGet">
            <summary>Sets the stub of IVertex.get_Adjacencies()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubIVertex.cc::Castle#Core#IVertex#Adjacencies">
            <summary>Sets the stub of IVertex.get_Adjacencies()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubInterceptorReference">
            <summary>Stub type of Castle.Core.InterceptorReference</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubInterceptorReference.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubInterceptorReference.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubInterceptorReference.Equals(System.Object)">
            <summary>Sets the stub of InterceptorReference.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubInterceptorReference.EqualsObject">
            <summary>Sets the stub of InterceptorReference.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubInterceptorReference.GetHashCode">
            <summary>Sets the stub of InterceptorReference.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubInterceptorReference.GetHashCode01">
            <summary>Sets the stub of InterceptorReference.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubInterceptorReference.InitializeStub">
            <summary>Initializes a new instance of type StubInterceptorReference</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubInterceptorReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubInterceptorReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubInterceptorReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubInterceptorReferenceCollection">
            <summary>Stub type of Castle.Core.InterceptorReferenceCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubInterceptorReferenceCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubInterceptorReferenceCollection.InitializeStub">
            <summary>Initializes a new instance of type StubInterceptorReferenceCollection</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubInterceptorReferenceCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubInterceptorReferenceCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubInterceptorReferenceCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubLifecycleStepCollection">
            <summary>Stub type of Castle.Core.LifecycleStepCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubLifecycleStepCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubLifecycleStepCollection.InitializeStub">
            <summary>Initializes a new instance of type StubLifecycleStepCollection</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubLifecycleStepCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubLifecycleStepCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubLifecycleStepCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubLifestyleAttribute">
            <summary>Stub type of Castle.Core.LifestyleAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubLifestyleAttribute.#ctor(Castle.Core.LifestyleType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubLifestyleAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubLifestyleAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubLifestyleAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubLifestyleAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubLifestyleAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubLifestyleAttribute</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubLifestyleAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubLifestyleAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubLifestyleAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubLifestyleAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubLifestyleAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubLifestyleAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubLifestyleAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubLifestyleAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubLifestyleAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubMethodMetaModel">
            <summary>Stub type of Castle.Core.MethodMetaModel</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubMethodMetaModel.#ctor(Castle.Core.Configuration.IConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubMethodMetaModel.InitializeStub">
            <summary>Initializes a new instance of type StubMethodMetaModel</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubMethodMetaModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubMethodMetaModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubMethodMetaModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubMethodMetaModelCollection">
            <summary>Stub type of Castle.Core.MethodMetaModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubMethodMetaModelCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubMethodMetaModelCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubMethodMetaModelCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubMethodMetaModelCollection.InitializeStub">
            <summary>Initializes a new instance of type StubMethodMetaModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubMethodMetaModelCollection.InsertItem(System.Int32,Castle.Core.MethodMetaModel)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubMethodMetaModelCollection.InsertItemInt32MethodMetaModel">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubMethodMetaModelCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubMethodMetaModelCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubMethodMetaModelCollection.SetItem(System.Int32,Castle.Core.MethodMetaModel)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubMethodMetaModelCollection.SetItemInt32MethodMetaModel">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubMethodMetaModelCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubMethodMetaModelCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubMethodMetaModelCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubPair`2">
            <summary>Stub type of Castle.Core.Pair`2</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.#ctor(`0,`1)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.Equals(System.Object)">
            <summary>Sets the stub of Pair`2.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPair`2.EqualsObject">
            <summary>Sets the stub of Pair`2.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.GetHashCode">
            <summary>Sets the stub of Pair`2.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPair`2.GetHashCode01">
            <summary>Sets the stub of Pair`2.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.InitializeStub">
            <summary>Initializes a new instance of type StubPair</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.ToString">
            <summary>Sets the stub of Pair`2.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPair`2.ToString01">
            <summary>Sets the stub of Pair`2.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPair`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPair`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPair`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubParameterModel">
            <summary>Stub type of Castle.Core.ParameterModel</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModel.#ctor(System.String,Castle.Core.Configuration.IConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModel.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModel.InitializeStub">
            <summary>Initializes a new instance of type StubParameterModel</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubParameterModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubParameterModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubParameterModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubParameterModelCollection">
            <summary>Stub type of Castle.Core.ParameterModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModelCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModelCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubParameterModelCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModelCollection.InitializeStub">
            <summary>Initializes a new instance of type StubParameterModelCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModelCollection.InsertItem(System.Int32,Castle.Core.ParameterModel)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubParameterModelCollection.InsertItemInt32ParameterModel">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModelCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubParameterModelCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubParameterModelCollection.SetItem(System.Int32,Castle.Core.ParameterModel)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubParameterModelCollection.SetItemInt32ParameterModel">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubParameterModelCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubParameterModelCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubParameterModelCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubPropertySet">
            <summary>Stub type of Castle.Core.PropertySet</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPropertySet.#ctor(System.Reflection.PropertyInfo,Castle.Core.DependencyModel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPropertySet.InitializeStub">
            <summary>Initializes a new instance of type StubPropertySet</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPropertySet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPropertySet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPropertySet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubPropertySetCollection">
            <summary>Stub type of Castle.Core.PropertySetCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPropertySetCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPropertySetCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPropertySetCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPropertySetCollection.InitializeStub">
            <summary>Initializes a new instance of type StubPropertySetCollection</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPropertySetCollection.InsertItem(System.Int32,Castle.Core.PropertySet)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPropertySetCollection.InsertItemInt32PropertySet">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPropertySetCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPropertySetCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPropertySetCollection.SetItem(System.Int32,Castle.Core.PropertySet)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPropertySetCollection.SetItemInt32PropertySet">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPropertySetCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPropertySetCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPropertySetCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor">
            <summary>Shim type of Castle.Core.Interceptor.StandardInterceptor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.#ctor(Castle.Core.Interceptor.StandardInterceptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.Bind(Castle.Core.Interceptor.IInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.Constructor">
            <summary>Sets the shim of StandardInterceptor.StandardInterceptor()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.InterceptIInvocation">
            <summary>Sets the shim of StandardInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.PerformProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PerformProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.PostProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PostProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.PreProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PreProceed(IInvocation invocation)</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.AllInstances.InterceptIInvocation">
            <summary>Sets the shim of StandardInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.AllInstances.PerformProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PerformProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.AllInstances.PostProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PostProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.ShimStandardInterceptor.AllInstances.PreProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PreProceed(IInvocation invocation)</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIChangeProxyTarget">
            <summary>Stub type of Castle.Core.Interceptor.IChangeProxyTarget</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIChangeProxyTarget.#ctor">
            <summary>Initializes a new instance of type StubIChangeProxyTarget</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIChangeProxyTarget.cc::Castle#Core#Interceptor#IChangeProxyTarget#ChangeInvocationTarget(System.Object)">
            <summary>Sets the stub of IChangeProxyTarget.ChangeInvocationTarget(Object target)</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIChangeProxyTarget.cc::Castle#Core#Interceptor#IChangeProxyTarget#ChangeProxyTarget(System.Object)">
            <summary>Sets the stub of IChangeProxyTarget.ChangeProxyTarget(Object target)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIChangeProxyTarget.ChangeInvocationTargetObject">
            <summary>Sets the stub of IChangeProxyTarget.ChangeInvocationTarget(Object target)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIChangeProxyTarget.ChangeProxyTargetObject">
            <summary>Sets the stub of IChangeProxyTarget.ChangeProxyTarget(Object target)</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIInterceptor">
            <summary>Stub type of Castle.Core.Interceptor.IInterceptor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInterceptor.#ctor">
            <summary>Initializes a new instance of type StubIInterceptor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInterceptor.cc::Castle#Core#Interceptor#IInterceptor#Intercept(Castle.Core.Interceptor.IInvocation)">
            <summary>Sets the stub of IInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInterceptor.InterceptIInvocation">
            <summary>Sets the stub of IInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIInterceptorSelector">
            <summary>Stub type of Castle.Core.Interceptor.IInterceptorSelector</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInterceptorSelector.#ctor">
            <summary>Initializes a new instance of type StubIInterceptorSelector</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInterceptorSelector.cc::Castle#Core#Interceptor#IInterceptorSelector#SelectInterceptors(System.Type,System.Reflection.MethodInfo,Castle.Core.Interceptor.IInterceptor[])">
            <summary>Sets the stub of IInterceptorSelector.SelectInterceptors(Type type, MethodInfo method, IInterceptor[] interceptors)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInterceptorSelector.SelectInterceptorsTypeMethodInfoIInterceptorArray">
            <summary>Sets the stub of IInterceptorSelector.SelectInterceptors(Type type, MethodInfo method, IInterceptor[] interceptors)</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIInvocation">
            <summary>Stub type of Castle.Core.Interceptor.IInvocation</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.#ctor">
            <summary>Initializes a new instance of type StubIInvocation</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.ArgumentsGet">
            <summary>Sets the stub of IInvocation.get_Arguments()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.AttachBackingFieldToReturnValue">
            <summary>Attaches delegates to emulate StubIInvocation.ReturnValue as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#GetArgumentValue(System.Int32)">
            <summary>Sets the stub of IInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#GetConcreteMethod">
            <summary>Sets the stub of IInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#GetConcreteMethodInvocationTarget">
            <summary>Sets the stub of IInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#Proceed">
            <summary>Sets the stub of IInvocation.Proceed()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#SetArgumentValue(System.Int32,System.Object)">
            <summary>Sets the stub of IInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.GenericArgumentsGet">
            <summary>Sets the stub of IInvocation.get_GenericArguments()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.GetArgumentValueInt32">
            <summary>Sets the stub of IInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.GetConcreteMethod">
            <summary>Sets the stub of IInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.GetConcreteMethodInvocationTarget">
            <summary>Sets the stub of IInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.InvocationTargetGet">
            <summary>Sets the stub of IInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.MethodGet">
            <summary>Sets the stub of IInvocation.get_Method()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.MethodInvocationTargetGet">
            <summary>Sets the stub of IInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.Proceed">
            <summary>Sets the stub of IInvocation.Proceed()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.ProxyGet">
            <summary>Sets the stub of IInvocation.get_Proxy()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.ReturnValueGet">
            <summary>Sets the stub of IInvocation.get_ReturnValue()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.ReturnValueSetObject">
            <summary>Sets the stub of IInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.SetArgumentValueInt32Object">
            <summary>Sets the stub of IInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.TargetTypeGet">
            <summary>Sets the stub of IInvocation.get_TargetType()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#Arguments">
            <summary>Sets the stub of IInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#GenericArguments">
            <summary>Sets the stub of IInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#InvocationTarget">
            <summary>Sets the stub of IInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#Method">
            <summary>Sets the stub of IInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#MethodInvocationTarget">
            <summary>Sets the stub of IInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#Proxy">
            <summary>Sets the stub of IInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#ReturnValue">
            <summary>Sets the stub of IInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.cc::Castle#Core#Interceptor#IInvocation#TargetType">
            <summary>Sets the stub of IInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIOnBehalfAware">
            <summary>Stub type of Castle.Core.Interceptor.IOnBehalfAware</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIOnBehalfAware.#ctor">
            <summary>Initializes a new instance of type StubIOnBehalfAware</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIOnBehalfAware.cc::Castle#Core#Interceptor#IOnBehalfAware#SetInterceptedComponentModel(Castle.Core.ComponentModel)">
            <summary>Sets the stub of IOnBehalfAware.SetInterceptedComponentModel(ComponentModel target)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIOnBehalfAware.SetInterceptedComponentModelComponentModel">
            <summary>Sets the stub of IOnBehalfAware.SetInterceptedComponentModel(ComponentModel target)</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor">
            <summary>Stub type of Castle.Core.Interceptor.IProxyTargetAccessor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.#ctor">
            <summary>Initializes a new instance of type StubIProxyTargetAccessor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.cc::Castle#Core#Interceptor#IProxyTargetAccessor#DynProxyGetTarget">
            <summary>Sets the stub of IProxyTargetAccessor.DynProxyGetTarget()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.cc::Castle#Core#Interceptor#IProxyTargetAccessor#GetInterceptors">
            <summary>Sets the stub of IProxyTargetAccessor.GetInterceptors()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.DynProxyGetTarget">
            <summary>Sets the stub of IProxyTargetAccessor.DynProxyGetTarget()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.GetInterceptors">
            <summary>Sets the stub of IProxyTargetAccessor.GetInterceptors()</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubStandardInterceptor">
            <summary>Stub type of Castle.Core.Interceptor.StandardInterceptor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.InitializeStub">
            <summary>Initializes a new instance of type StubStandardInterceptor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.PerformProceed(Castle.Core.Interceptor.IInvocation)">
            <summary>Sets the stub of StandardInterceptor.PerformProceed(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.PerformProceedIInvocation">
            <summary>Sets the stub of StandardInterceptor.PerformProceed(IInvocation invocation)</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.PostProceed(Castle.Core.Interceptor.IInvocation)">
            <summary>Sets the stub of StandardInterceptor.PostProceed(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.PostProceedIInvocation">
            <summary>Sets the stub of StandardInterceptor.PostProceed(IInvocation invocation)</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.PreProceed(Castle.Core.Interceptor.IInvocation)">
            <summary>Sets the stub of StandardInterceptor.PreProceed(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.PreProceedIInvocation">
            <summary>Sets the stub of StandardInterceptor.PreProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubStandardInterceptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimLinkedList">
            <summary>Shim type of Castle.Core.Internal.LinkedList</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLinkedList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLinkedList.#ctor(Castle.Core.Internal.LinkedList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLinkedList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLinkedList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLinkedList.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLinkedList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLinkedList.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AddFirstObject">
            <summary>Sets the shim of LinkedList.AddFirst(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AddLastObject">
            <summary>Sets the shim of LinkedList.AddLast(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AddObject">
            <summary>Sets the shim of LinkedList.Add(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.Clear">
            <summary>Sets the shim of LinkedList.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.Constructor">
            <summary>Sets the shim of LinkedList.LinkedList()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.ContainsObject">
            <summary>Sets the shim of LinkedList.Contains(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.CopyToArrayInt32">
            <summary>Sets the shim of LinkedList.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.CountGet">
            <summary>Sets the shim of LinkedList.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.GetEnumerator">
            <summary>Sets the shim of LinkedList.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.HeadGet">
            <summary>Sets the shim of LinkedList.get_Head()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.IndexOfObject">
            <summary>Sets the shim of LinkedList.IndexOf(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.InsertInt32Object">
            <summary>Sets the shim of LinkedList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.IsFixedSizeGet">
            <summary>Sets the shim of LinkedList.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.IsReadOnlyGet">
            <summary>Sets the shim of LinkedList.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.IsSynchronizedGet">
            <summary>Sets the shim of LinkedList.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.ItemGetInt32">
            <summary>Sets the shim of LinkedList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.ItemSetInt32Object">
            <summary>Sets the shim of LinkedList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.RemoveAtInt32">
            <summary>Sets the shim of LinkedList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.RemoveObject">
            <summary>Sets the shim of LinkedList.Remove(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.ReplaceObjectObject">
            <summary>Sets the shim of LinkedList.Replace(Object old, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.SyncRootGet">
            <summary>Sets the shim of LinkedList.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.ToArrayType">
            <summary>Sets the shim of LinkedList.ToArray(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.ValidateIndexInt32">
            <summary>Sets the shim of LinkedList.ValidateIndex(Int32 index)</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.AddFirstObject">
            <summary>Sets the shim of LinkedList.AddFirst(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.AddLastObject">
            <summary>Sets the shim of LinkedList.AddLast(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.AddObject">
            <summary>Sets the shim of LinkedList.Add(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.Clear">
            <summary>Sets the shim of LinkedList.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.ContainsObject">
            <summary>Sets the shim of LinkedList.Contains(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of LinkedList.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.CountGet">
            <summary>Sets the shim of LinkedList.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.GetEnumerator">
            <summary>Sets the shim of LinkedList.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.HeadGet">
            <summary>Sets the shim of LinkedList.get_Head()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.IndexOfObject">
            <summary>Sets the shim of LinkedList.IndexOf(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.InsertInt32Object">
            <summary>Sets the shim of LinkedList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of LinkedList.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of LinkedList.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of LinkedList.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.ItemGetInt32">
            <summary>Sets the shim of LinkedList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.ItemSetInt32Object">
            <summary>Sets the shim of LinkedList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of LinkedList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.RemoveObject">
            <summary>Sets the shim of LinkedList.Remove(Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.ReplaceObjectObject">
            <summary>Sets the shim of LinkedList.Replace(Object old, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.SyncRootGet">
            <summary>Sets the shim of LinkedList.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.ToArrayType">
            <summary>Sets the shim of LinkedList.ToArray(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLinkedList.AllInstances.ValidateIndexInt32">
            <summary>Sets the shim of LinkedList.ValidateIndex(Int32 index)</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimLock">
            <summary>Shim type of Castle.Core.Internal.Lock</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLock.#ctor(Castle.Core.Internal.Lock)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLock.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLock.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLock.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLock.Constructor">
            <summary>Sets the shim of Lock.Lock()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLock.Create">
            <summary>Sets the shim of Lock.Create()</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimLock.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimTopologicalSortAlgo">
            <summary>Shim type of Castle.Core.Internal.TopologicalSortAlgo</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimTopologicalSortAlgo.#ctor(Castle.Core.Internal.TopologicalSortAlgo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimTopologicalSortAlgo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimTopologicalSortAlgo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimTopologicalSortAlgo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimTopologicalSortAlgo.Constructor">
            <summary>Sets the shim of TopologicalSortAlgo.TopologicalSortAlgo()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimTopologicalSortAlgo.SortIVertexArray">
            <summary>Sets the shim of TopologicalSortAlgo.Sort(IVertex[] graphNodes)</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimTopologicalSortAlgo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubILockHolder">
            <summary>Stub type of Castle.Core.Internal.ILockHolder</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubILockHolder.#ctor">
            <summary>Initializes a new instance of type StubILockHolder</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubILockHolder.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubILockHolder.LockAcquiredGet">
            <summary>Sets the stub of ILockHolder.get_LockAcquired()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubILockHolder.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubILockHolder.cc::Castle#Core#Internal#ILockHolder#LockAcquired">
            <summary>Sets the stub of ILockHolder.get_LockAcquired()</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder">
            <summary>Stub type of Castle.Core.Internal.IUpgradeableLockHolder</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.#ctor">
            <summary>Initializes a new instance of type StubIUpgradeableLockHolder</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.cc::Castle#Core#Internal#IUpgradeableLockHolder#Upgrade">
            <summary>Sets the stub of IUpgradeableLockHolder.Upgrade()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.cc::Castle#Core#Internal#IUpgradeableLockHolder#Upgrade(System.Boolean)">
            <summary>Sets the stub of IUpgradeableLockHolder.Upgrade(Boolean waitForLock)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.LockAcquiredGet">
            <summary>Sets the stub of ILockHolder.get_LockAcquired()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.Upgrade">
            <summary>Sets the stub of IUpgradeableLockHolder.Upgrade()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.UpgradeBoolean">
            <summary>Sets the stub of IUpgradeableLockHolder.Upgrade(Boolean waitForLock)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.cc::Castle#Core#Internal#ILockHolder#LockAcquired">
            <summary>Sets the stub of ILockHolder.get_LockAcquired()</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubLinkedList">
            <summary>Stub type of Castle.Core.Internal.LinkedList</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.Add(System.Object)">
            <summary>Sets the stub of LinkedList.Add(Object value)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.AddFirst(System.Object)">
            <summary>Sets the stub of LinkedList.AddFirst(Object value)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLinkedList.AddFirstObject">
            <summary>Sets the stub of LinkedList.AddFirst(Object value)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.AddLast(System.Object)">
            <summary>Sets the stub of LinkedList.AddLast(Object value)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLinkedList.AddLastObject">
            <summary>Sets the stub of LinkedList.AddLast(Object value)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLinkedList.AddObject">
            <summary>Sets the stub of LinkedList.Add(Object value)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.InitializeStub">
            <summary>Initializes a new instance of type StubLinkedList</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.Insert(System.Int32,System.Object)">
            <summary>Sets the stub of LinkedList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLinkedList.InsertInt32Object">
            <summary>Sets the stub of LinkedList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.Remove(System.Object)">
            <summary>Sets the stub of LinkedList.Remove(Object value)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.RemoveAt(System.Int32)">
            <summary>Sets the stub of LinkedList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLinkedList.RemoveAtInt32">
            <summary>Sets the stub of LinkedList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLinkedList.RemoveObject">
            <summary>Sets the stub of LinkedList.Remove(Object value)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLinkedList.Replace(System.Object,System.Object)">
            <summary>Sets the stub of LinkedList.Replace(Object old, Object value)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLinkedList.ReplaceObjectObject">
            <summary>Sets the stub of LinkedList.Replace(Object old, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLinkedList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLinkedList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLinkedList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubLock">
            <summary>Stub type of Castle.Core.Internal.Lock</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForReading">
            <summary>Sets the stub of Lock.ForReading()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForReading(System.Boolean)">
            <summary>Sets the stub of Lock.ForReading(Boolean waitForLock)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForReading01">
            <summary>Sets the stub of Lock.ForReading()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForReadingBoolean">
            <summary>Sets the stub of Lock.ForReading(Boolean waitForLock)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForReadingUpgradeable">
            <summary>Sets the stub of Lock.ForReadingUpgradeable()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForReadingUpgradeable(System.Boolean)">
            <summary>Sets the stub of Lock.ForReadingUpgradeable(Boolean waitForLock)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForReadingUpgradeable01">
            <summary>Sets the stub of Lock.ForReadingUpgradeable()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForReadingUpgradeableBoolean">
            <summary>Sets the stub of Lock.ForReadingUpgradeable(Boolean waitForLock)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForWriting">
            <summary>Sets the stub of Lock.ForWriting()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForWriting(System.Boolean)">
            <summary>Sets the stub of Lock.ForWriting(Boolean waitForLock)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForWriting01">
            <summary>Sets the stub of Lock.ForWriting()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForWritingBoolean">
            <summary>Sets the stub of Lock.ForWriting(Boolean waitForLock)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.InitializeStub">
            <summary>Initializes a new instance of type StubLock</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLock.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLock.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLock.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubTopologicalSortAlgo">
            <summary>Stub type of Castle.Core.Internal.TopologicalSortAlgo</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubTopologicalSortAlgo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubTopologicalSortAlgo.InitializeStub">
            <summary>Initializes a new instance of type StubTopologicalSortAlgo</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubTopologicalSortAlgo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubTopologicalSortAlgo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubTopologicalSortAlgo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.#ctor(Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.Bind(Castle.Core.Logging.IExtendedLoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.CastleCoreLoggingILoggerFactoryCreateString">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.CastleCoreLoggingILoggerFactoryCreateStringLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.CastleCoreLoggingILoggerFactoryCreateType">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.CastleCoreLoggingILoggerFactoryCreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.Constructor">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.AbstractExtendedLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.CreateType">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.GetConfigFileString">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.GetConfigFile(String fileName)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CastleCoreLoggingILoggerFactoryCreateString">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CastleCoreLoggingILoggerFactoryCreateStringLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CastleCoreLoggingILoggerFactoryCreateType">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CastleCoreLoggingILoggerFactoryCreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CreateType">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.Factories.AbstractExtendedLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.Create(System.String)">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.CreateString">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractExtendedLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Factories.Fakes.StubAbstractExtendedLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.AbstractLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.#ctor(Castle.Core.Logging.AbstractLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.Constructor">
            <summary>Sets the shim of AbstractLoggerFactory.AbstractLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.CreateType">
            <summary>Sets the shim of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.GetConfigFileString">
            <summary>Sets the shim of AbstractLoggerFactory.GetConfigFile(String fileName)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.AllInstances.CreateType">
            <summary>Sets the shim of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.AllInstances.CreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimConsoleFactory">
            <summary>Shim type of Castle.Core.Logging.ConsoleFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.#ctor(Castle.Core.Logging.ConsoleFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.Constructor">
            <summary>Sets the shim of ConsoleFactory.ConsoleFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.CreateString">
            <summary>Sets the shim of ConsoleFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.CreateType">
            <summary>Sets the shim of ConsoleFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.CreateTypeLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances.CreateString">
            <summary>Sets the shim of ConsoleFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances.CreateType">
            <summary>Sets the shim of ConsoleFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances.CreateTypeLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimConsoleLogger">
            <summary>Shim type of Castle.Core.Logging.ConsoleLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.#ctor(Castle.Core.Logging.ConsoleLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.Constructor">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.ConstructorLoggerLevel">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger(LoggerLevel logLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.ConstructorString">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.ConstructorStringLoggerLevel">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger(String name, LoggerLevel logLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.CreateChildLoggerString">
            <summary>Sets the shim of ConsoleLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of ConsoleLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimConsoleLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of ConsoleLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of ConsoleLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger">
            <summary>Shim type of Castle.Core.Logging.DiagnosticsLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.#ctor(Castle.Core.Logging.DiagnosticsLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.ConstructorString">
            <summary>Sets the shim of DiagnosticsLogger.DiagnosticsLogger(String logName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.ConstructorStringString">
            <summary>Sets the shim of DiagnosticsLogger.DiagnosticsLogger(String logName, String source)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.ConstructorStringStringString">
            <summary>Sets the shim of DiagnosticsLogger.DiagnosticsLogger(String logName, String machineName, String source)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.CreateChildLoggerString">
            <summary>Sets the shim of DiagnosticsLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.Dispose">
            <summary>Sets the shim of DiagnosticsLogger.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.DisposeBoolean">
            <summary>Sets the shim of DiagnosticsLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of DiagnosticsLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.TranslateLevelLoggerLevel">
            <summary>Sets the shim of DiagnosticsLogger.TranslateLevel(LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of DiagnosticsLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances.Dispose">
            <summary>Sets the shim of DiagnosticsLogger.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DiagnosticsLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of DiagnosticsLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.DiagnosticsLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.#ctor(Castle.Core.Logging.DiagnosticsLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.Constructor">
            <summary>Sets the shim of DiagnosticsLoggerFactory.DiagnosticsLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.CreateString">
            <summary>Sets the shim of DiagnosticsLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of DiagnosticsLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.AllInstances.CreateString">
            <summary>Sets the shim of DiagnosticsLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of DiagnosticsLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger">
            <summary>Shim type of Castle.Core.Logging.LevelFilteredLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.#ctor(Castle.Core.Logging.LevelFilteredLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ChangeNameString">
            <summary>Sets the shim of LevelFilteredLogger.ChangeName(String newName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.Constructor">
            <summary>Sets the shim of LevelFilteredLogger.LevelFilteredLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ConstructorLoggerLevel">
            <summary>Sets the shim of LevelFilteredLogger.LevelFilteredLogger(LoggerLevel loggerLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ConstructorString">
            <summary>Sets the shim of LevelFilteredLogger.LevelFilteredLogger(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ConstructorStringLoggerLevel">
            <summary>Sets the shim of LevelFilteredLogger.LevelFilteredLogger(String loggerName, LoggerLevel loggerLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugString">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugStringException">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorString">
            <summary>Sets the shim of LevelFilteredLogger.Error(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorStringException">
            <summary>Sets the shim of LevelFilteredLogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Error(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalErrorString">
            <summary>Sets the shim of LevelFilteredLogger.FatalError(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalErrorStringException">
            <summary>Sets the shim of LevelFilteredLogger.FatalError(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalErrorStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalError(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalString">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalStringException">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoString">
            <summary>Sets the shim of LevelFilteredLogger.Info(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoStringException">
            <summary>Sets the shim of LevelFilteredLogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Info(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InitializeLifetimeService">
            <summary>Sets the shim of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsDebugEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsErrorEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsFatalEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsFatalErrorEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsFatalErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsInfoEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsWarnEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.LevelGet">
            <summary>Sets the shim of LevelFilteredLogger.get_Level()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.LevelSetLoggerLevel">
            <summary>Sets the shim of LevelFilteredLogger.set_Level(LoggerLevel value)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.LogLoggerLevelStringException">
            <summary>Sets the shim of LevelFilteredLogger.Log(LoggerLevel loggerLevel, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.NameGet">
            <summary>Sets the shim of LevelFilteredLogger.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnString">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnStringException">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String format, Object[] args)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ChangeNameString">
            <summary>Sets the shim of LevelFilteredLogger.ChangeName(String newName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugString">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugStringException">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorString">
            <summary>Sets the shim of LevelFilteredLogger.Error(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorStringException">
            <summary>Sets the shim of LevelFilteredLogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Error(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalErrorString">
            <summary>Sets the shim of LevelFilteredLogger.FatalError(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalErrorStringException">
            <summary>Sets the shim of LevelFilteredLogger.FatalError(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalErrorStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalError(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalString">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalStringException">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoString">
            <summary>Sets the shim of LevelFilteredLogger.Info(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoStringException">
            <summary>Sets the shim of LevelFilteredLogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Info(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsDebugEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsErrorEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsFatalEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsFatalErrorEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsFatalErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsInfoEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsWarnEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.LevelGet">
            <summary>Sets the shim of LevelFilteredLogger.get_Level()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.LevelSetLoggerLevel">
            <summary>Sets the shim of LevelFilteredLogger.set_Level(LoggerLevel value)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.LogLoggerLevelStringException">
            <summary>Sets the shim of LevelFilteredLogger.Log(LoggerLevel loggerLevel, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.NameGet">
            <summary>Sets the shim of LevelFilteredLogger.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnString">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnStringException">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String format, Object[] args)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimLoggerException">
            <summary>Shim type of Castle.Core.Logging.LoggerException</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.#ctor(Castle.Core.Logging.LoggerException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.Constructor">
            <summary>Sets the shim of LoggerException.LoggerException()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of LoggerException.LoggerException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.ConstructorString">
            <summary>Sets the shim of LoggerException.LoggerException(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.ConstructorStringException">
            <summary>Sets the shim of LoggerException.LoggerException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimLoggerException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimNullLogFactory">
            <summary>Shim type of Castle.Core.Logging.NullLogFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.#ctor(Castle.Core.Logging.NullLogFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.Constructor">
            <summary>Sets the shim of NullLogFactory.NullLogFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.CreateString">
            <summary>Sets the shim of NullLogFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of NullLogFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimNullLogFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.AllInstances.CreateString">
            <summary>Sets the shim of NullLogFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of NullLogFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimNullLogger">
            <summary>Shim type of Castle.Core.Logging.NullLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.#ctor(Castle.Core.Logging.NullLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.Bind(Castle.Core.Logging.IExtendedLogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.Constructor">
            <summary>Sets the shim of NullLogger.NullLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.CreateChildLoggerString">
            <summary>Sets the shim of NullLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugString">
            <summary>Sets the shim of NullLogger.Debug(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugStringException">
            <summary>Sets the shim of NullLogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugStringObjectArray">
            <summary>Sets the shim of NullLogger.Debug(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorString">
            <summary>Sets the shim of NullLogger.Error(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorStringException">
            <summary>Sets the shim of NullLogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorStringObjectArray">
            <summary>Sets the shim of NullLogger.Error(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalErrorString">
            <summary>Sets the shim of NullLogger.FatalError(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalErrorStringException">
            <summary>Sets the shim of NullLogger.FatalError(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalErrorStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalError(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalString">
            <summary>Sets the shim of NullLogger.Fatal(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalStringException">
            <summary>Sets the shim of NullLogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalStringObjectArray">
            <summary>Sets the shim of NullLogger.Fatal(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.GlobalPropertiesGet">
            <summary>Sets the shim of NullLogger.get_GlobalProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoString">
            <summary>Sets the shim of NullLogger.Info(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoStringException">
            <summary>Sets the shim of NullLogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoStringObjectArray">
            <summary>Sets the shim of NullLogger.Info(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsDebugEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsErrorEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsFatalEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsFatalErrorEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsFatalErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsInfoEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsWarnEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.StaticConstructor">
            <summary>Sets the shim of NullLogger.NullLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ThreadPropertiesGet">
            <summary>Sets the shim of NullLogger.get_ThreadProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ThreadStacksGet">
            <summary>Sets the shim of NullLogger.get_ThreadStacks()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnString">
            <summary>Sets the shim of NullLogger.Warn(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnStringException">
            <summary>Sets the shim of NullLogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnStringObjectArray">
            <summary>Sets the shim of NullLogger.Warn(String format, Object[] args)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of NullLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugString">
            <summary>Sets the shim of NullLogger.Debug(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugStringException">
            <summary>Sets the shim of NullLogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugStringObjectArray">
            <summary>Sets the shim of NullLogger.Debug(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorString">
            <summary>Sets the shim of NullLogger.Error(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorStringException">
            <summary>Sets the shim of NullLogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorStringObjectArray">
            <summary>Sets the shim of NullLogger.Error(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalErrorString">
            <summary>Sets the shim of NullLogger.FatalError(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalErrorStringException">
            <summary>Sets the shim of NullLogger.FatalError(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalErrorStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalError(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalString">
            <summary>Sets the shim of NullLogger.Fatal(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalStringException">
            <summary>Sets the shim of NullLogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalStringObjectArray">
            <summary>Sets the shim of NullLogger.Fatal(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.GlobalPropertiesGet">
            <summary>Sets the shim of NullLogger.get_GlobalProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoString">
            <summary>Sets the shim of NullLogger.Info(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoStringException">
            <summary>Sets the shim of NullLogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoStringObjectArray">
            <summary>Sets the shim of NullLogger.Info(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsDebugEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsErrorEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsFatalEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsFatalErrorEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsFatalErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsInfoEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsWarnEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ThreadPropertiesGet">
            <summary>Sets the shim of NullLogger.get_ThreadProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ThreadStacksGet">
            <summary>Sets the shim of NullLogger.get_ThreadStacks()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnString">
            <summary>Sets the shim of NullLogger.Warn(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnStringException">
            <summary>Sets the shim of NullLogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnStringObjectArray">
            <summary>Sets the shim of NullLogger.Warn(String format, Object[] args)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimStreamLogger">
            <summary>Shim type of Castle.Core.Logging.StreamLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.#ctor(Castle.Core.Logging.StreamLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.ConstructorStringStream">
            <summary>Sets the shim of StreamLogger.StreamLogger(String name, Stream stream)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.ConstructorStringStreamEncoding">
            <summary>Sets the shim of StreamLogger.StreamLogger(String name, Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.ConstructorStringStreamEncodingInt32">
            <summary>Sets the shim of StreamLogger.StreamLogger(String name, Stream stream, Encoding encoding, Int32 bufferSize)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.ConstructorStringStreamWriter">
            <summary>Sets the shim of StreamLogger.StreamLogger(String name, StreamWriter writer)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.CreateChildLoggerString">
            <summary>Sets the shim of StreamLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.Dispose">
            <summary>Sets the shim of StreamLogger.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.DisposeBoolean">
            <summary>Sets the shim of StreamLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of StreamLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of StreamLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances.Dispose">
            <summary>Sets the shim of StreamLogger.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StreamLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of StreamLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.StreamLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.#ctor(Castle.Core.Logging.StreamLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.Constructor">
            <summary>Sets the shim of StreamLoggerFactory.StreamLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.CreateString">
            <summary>Sets the shim of StreamLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of StreamLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.AllInstances.CreateString">
            <summary>Sets the shim of StreamLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of StreamLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimTraceLogger">
            <summary>Shim type of Castle.Core.Logging.TraceLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.#ctor(Castle.Core.Logging.TraceLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.ConstructorString">
            <summary>Sets the shim of TraceLogger.TraceLogger(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.ConstructorStringLoggerLevel">
            <summary>Sets the shim of TraceLogger.TraceLogger(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.CreateChildLoggerString">
            <summary>Sets the shim of TraceLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.Initialize">
            <summary>Sets the shim of TraceLogger.Initialize()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.IsSourceConfiguredTraceSource">
            <summary>Sets the shim of TraceLogger.IsSourceConfigured(TraceSource source)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of TraceLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.MapLoggerLevelSourceLevels">
            <summary>Sets the shim of TraceLogger.MapLoggerLevel(SourceLevels level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.MapSourceLevelsLoggerLevel">
            <summary>Sets the shim of TraceLogger.MapSourceLevels(LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.MapTraceEventTypeLoggerLevel">
            <summary>Sets the shim of TraceLogger.MapTraceEventType(LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.ShortenNameString">
            <summary>Sets the shim of TraceLogger.ShortenName(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.StaticConstructor">
            <summary>Sets the shim of TraceLogger.TraceLogger()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of TraceLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances.Initialize">
            <summary>Sets the shim of TraceLogger.Initialize()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of TraceLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.TraceLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.#ctor(Castle.Core.Logging.TraceLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.Constructor">
            <summary>Sets the shim of TraceLoggerFactory.TraceLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.CreateString">
            <summary>Sets the shim of TraceLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of TraceLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.AllInstances.CreateString">
            <summary>Sets the shim of TraceLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of TraceLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimWebLogger">
            <summary>Shim type of Castle.Core.Logging.WebLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLogger.#ctor(Castle.Core.Logging.WebLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.Constructor">
            <summary>Sets the shim of WebLogger.WebLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.ConstructorLoggerLevel">
            <summary>Sets the shim of WebLogger.WebLogger(LoggerLevel logLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.ConstructorString">
            <summary>Sets the shim of WebLogger.WebLogger(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.ConstructorStringLoggerLevel">
            <summary>Sets the shim of WebLogger.WebLogger(String name, LoggerLevel loggerLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.CreateChildLoggerString">
            <summary>Sets the shim of WebLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of WebLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.StaticConstructor">
            <summary>Sets the shim of WebLogger.WebLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.TryToGetTraceContext">
            <summary>Sets the shim of WebLogger.TryToGetTraceContext()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimWebLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of WebLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of WebLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLogger.AllInstances.TryToGetTraceContext">
            <summary>Sets the shim of WebLogger.TryToGetTraceContext()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimWebLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.WebLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.#ctor(Castle.Core.Logging.WebLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.Constructor">
            <summary>Sets the shim of WebLoggerFactory.WebLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.CreateString">
            <summary>Sets the shim of WebLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of WebLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.AllInstances.CreateString">
            <summary>Sets the shim of WebLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimWebLoggerFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of WebLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.AbstractLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.Create(System.String)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CreateString">
            <summary>Sets the stub of AbstractLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubConsoleFactory">
            <summary>Stub type of Castle.Core.Logging.ConsoleFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleFactory.InitializeStub">
            <summary>Initializes a new instance of type StubConsoleFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubConsoleLogger">
            <summary>Stub type of Castle.Core.Logging.ConsoleLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.#ctor(Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.#ctor(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of ConsoleLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubConsoleLogger.CreateChildLoggerString">
            <summary>Sets the stub of ConsoleLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubConsoleLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.InitializeStub">
            <summary>Initializes a new instance of type StubConsoleLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of ConsoleLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubConsoleLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of ConsoleLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubDiagnosticsLogger">
            <summary>Stub type of Castle.Core.Logging.DiagnosticsLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of DiagnosticsLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.CreateChildLoggerString">
            <summary>Sets the stub of DiagnosticsLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.Dispose(System.Boolean)">
            <summary>Sets the stub of DiagnosticsLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.DisposeBoolean">
            <summary>Sets the stub of DiagnosticsLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InitializeStub">
            <summary>Initializes a new instance of type StubDiagnosticsLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of DiagnosticsLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of DiagnosticsLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.DiagnosticsLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.Create(System.String)">
            <summary>Sets the stub of DiagnosticsLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of DiagnosticsLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CreateString">
            <summary>Sets the stub of DiagnosticsLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of DiagnosticsLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubDiagnosticsLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIContextProperties">
            <summary>Stub type of Castle.Core.Logging.IContextProperties</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextProperties.#ctor">
            <summary>Initializes a new instance of type StubIContextProperties</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextProperties.ItemGetString">
            <summary>Sets the stub of IContextProperties.get_Item(String key)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextProperties.ItemSetStringObject">
            <summary>Sets the stub of IContextProperties.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIContextProperties.Castle#Core#Logging#IContextProperties#Item(System.String)">
            <summary>Sets the stub of IContextProperties.get_Item(String key)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIContextStack">
            <summary>Stub type of Castle.Core.Logging.IContextStack</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStack.#ctor">
            <summary>Initializes a new instance of type StubIContextStack</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStack.cc::Castle#Core#Logging#IContextStack#Clear">
            <summary>Sets the stub of IContextStack.Clear()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStack.cc::Castle#Core#Logging#IContextStack#Pop">
            <summary>Sets the stub of IContextStack.Pop()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStack.cc::Castle#Core#Logging#IContextStack#Push(System.String)">
            <summary>Sets the stub of IContextStack.Push(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStack.Clear">
            <summary>Sets the stub of IContextStack.Clear()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStack.CountGet">
            <summary>Sets the stub of IContextStack.get_Count()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStack.Pop">
            <summary>Sets the stub of IContextStack.Pop()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStack.PushString">
            <summary>Sets the stub of IContextStack.Push(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIContextStack.cc::Castle#Core#Logging#IContextStack#Count">
            <summary>Sets the stub of IContextStack.get_Count()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIContextStacks">
            <summary>Stub type of Castle.Core.Logging.IContextStacks</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStacks.#ctor">
            <summary>Initializes a new instance of type StubIContextStacks</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStacks.ItemGetString">
            <summary>Sets the stub of IContextStacks.get_Item(String key)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIContextStacks.Castle#Core#Logging#IContextStacks#Item(System.String)">
            <summary>Sets the stub of IContextStacks.get_Item(String key)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIExtendedLogger">
            <summary>Stub type of Castle.Core.Logging.IExtendedLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.#ctor">
            <summary>Initializes a new instance of type StubIExtendedLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#CreateChildLogger(System.String)">
            <summary>Sets the stub of ILogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Debug(System.String)">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Debug(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Debug(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Debug(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Error(System.String)">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Error(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Error(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Error(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String)">
            <summary>Sets the stub of ILogger.Fatal(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Fatal(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalError(System.String)">
            <summary>Sets the stub of ILogger.FatalError(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalError(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalError(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalError(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.FatalError(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Info(System.String)">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Info(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Info(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Info(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Warn(System.String)">
            <summary>Sets the stub of ILogger.Warn(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Warn(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Warn(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Warn(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.CreateChildLoggerString">
            <summary>Sets the stub of ILogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFormatStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugString">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugStringException">
            <summary>Sets the stub of ILogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugStringObjectArray">
            <summary>Sets the stub of ILogger.Debug(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFormatStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorString">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorStringException">
            <summary>Sets the stub of ILogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorStringObjectArray">
            <summary>Sets the stub of ILogger.Error(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalErrorString">
            <summary>Sets the stub of ILogger.FatalError(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalErrorStringException">
            <summary>Sets the stub of ILogger.FatalError(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalErrorStringObjectArray">
            <summary>Sets the stub of ILogger.FatalError(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFormatStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalString">
            <summary>Sets the stub of ILogger.Fatal(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalStringException">
            <summary>Sets the stub of ILogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalStringObjectArray">
            <summary>Sets the stub of ILogger.Fatal(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.GlobalPropertiesGet">
            <summary>Sets the stub of IExtendedLogger.get_GlobalProperties()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFormatStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoString">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoStringException">
            <summary>Sets the stub of ILogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoStringObjectArray">
            <summary>Sets the stub of ILogger.Info(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsDebugEnabledGet">
            <summary>Sets the stub of ILogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsErrorEnabledGet">
            <summary>Sets the stub of ILogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsFatalEnabledGet">
            <summary>Sets the stub of ILogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsFatalErrorEnabledGet">
            <summary>Sets the stub of ILogger.get_IsFatalErrorEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsInfoEnabledGet">
            <summary>Sets the stub of ILogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsWarnEnabledGet">
            <summary>Sets the stub of ILogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ThreadPropertiesGet">
            <summary>Sets the stub of IExtendedLogger.get_ThreadProperties()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ThreadStacksGet">
            <summary>Sets the stub of IExtendedLogger.get_ThreadStacks()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFormatStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnString">
            <summary>Sets the stub of ILogger.Warn(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnStringException">
            <summary>Sets the stub of ILogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnStringObjectArray">
            <summary>Sets the stub of ILogger.Warn(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#IExtendedLogger#GlobalProperties">
            <summary>Sets the stub of IExtendedLogger.get_GlobalProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsDebugEnabled">
            <summary>Sets the stub of ILogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsErrorEnabled">
            <summary>Sets the stub of ILogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsFatalEnabled">
            <summary>Sets the stub of ILogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsFatalErrorEnabled">
            <summary>Sets the stub of ILogger.get_IsFatalErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsInfoEnabled">
            <summary>Sets the stub of ILogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsWarnEnabled">
            <summary>Sets the stub of ILogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#IExtendedLogger#ThreadProperties">
            <summary>Sets the stub of IExtendedLogger.get_ThreadProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#IExtendedLogger#ThreadStacks">
            <summary>Sets the stub of IExtendedLogger.get_ThreadStacks()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.IExtendedLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.#ctor">
            <summary>Initializes a new instance of type StubIExtendedLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#IExtendedLoggerFactory#Create(System.String)">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#IExtendedLoggerFactory#Create(System.Type)">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#IExtendedLoggerFactory#Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#IExtendedLoggerFactory#Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.String)">
            <summary>Sets the stub of ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.Type)">
            <summary>Sets the stub of ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateString">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateString01">
            <summary>Sets the stub of ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateStringLoggerLevel01">
            <summary>Sets the stub of ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateType">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateType01">
            <summary>Sets the stub of ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateTypeLoggerLevel01">
            <summary>Sets the stub of ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubILogger">
            <summary>Stub type of Castle.Core.Logging.ILogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.#ctor">
            <summary>Initializes a new instance of type StubILogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#CreateChildLogger(System.String)">
            <summary>Sets the stub of ILogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Debug(System.String)">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Debug(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Debug(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Debug(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Error(System.String)">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Error(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Error(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Error(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String)">
            <summary>Sets the stub of ILogger.Fatal(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Fatal(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalError(System.String)">
            <summary>Sets the stub of ILogger.FatalError(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalError(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalError(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalError(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.FatalError(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Info(System.String)">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Info(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Info(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Info(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Warn(System.String)">
            <summary>Sets the stub of ILogger.Warn(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Warn(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Warn(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Warn(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.CreateChildLoggerString">
            <summary>Sets the stub of ILogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFormatStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugString">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugStringException">
            <summary>Sets the stub of ILogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugStringObjectArray">
            <summary>Sets the stub of ILogger.Debug(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFormatStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorString">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorStringException">
            <summary>Sets the stub of ILogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorStringObjectArray">
            <summary>Sets the stub of ILogger.Error(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalErrorString">
            <summary>Sets the stub of ILogger.FatalError(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalErrorStringException">
            <summary>Sets the stub of ILogger.FatalError(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalErrorStringObjectArray">
            <summary>Sets the stub of ILogger.FatalError(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFormatStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalString">
            <summary>Sets the stub of ILogger.Fatal(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalStringException">
            <summary>Sets the stub of ILogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalStringObjectArray">
            <summary>Sets the stub of ILogger.Fatal(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFormatStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoString">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoStringException">
            <summary>Sets the stub of ILogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoStringObjectArray">
            <summary>Sets the stub of ILogger.Info(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsDebugEnabledGet">
            <summary>Sets the stub of ILogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsErrorEnabledGet">
            <summary>Sets the stub of ILogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsFatalEnabledGet">
            <summary>Sets the stub of ILogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsFatalErrorEnabledGet">
            <summary>Sets the stub of ILogger.get_IsFatalErrorEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsInfoEnabledGet">
            <summary>Sets the stub of ILogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsWarnEnabledGet">
            <summary>Sets the stub of ILogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFormatStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnString">
            <summary>Sets the stub of ILogger.Warn(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnStringException">
            <summary>Sets the stub of ILogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnStringObjectArray">
            <summary>Sets the stub of ILogger.Warn(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsDebugEnabled">
            <summary>Sets the stub of ILogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsErrorEnabled">
            <summary>Sets the stub of ILogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsFatalEnabled">
            <summary>Sets the stub of ILogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsFatalErrorEnabled">
            <summary>Sets the stub of ILogger.get_IsFatalErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsInfoEnabled">
            <summary>Sets the stub of ILogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsWarnEnabled">
            <summary>Sets the stub of ILogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubILoggerFactory">
            <summary>Stub type of Castle.Core.Logging.ILoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.#ctor">
            <summary>Initializes a new instance of type StubILoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.String)">
            <summary>Sets the stub of ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.Type)">
            <summary>Sets the stub of ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILoggerFactory.CreateString">
            <summary>Sets the stub of ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILoggerFactory.CreateType">
            <summary>Sets the stub of ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubLevelFilteredLogger">
            <summary>Stub type of Castle.Core.Logging.LevelFilteredLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.#ctor(Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.#ctor(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of LevelFilteredLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.CreateChildLoggerString">
            <summary>Sets the stub of LevelFilteredLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InitializeStub">
            <summary>Initializes a new instance of type StubLevelFilteredLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of LevelFilteredLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of LevelFilteredLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubLoggerException">
            <summary>Stub type of Castle.Core.Logging.LoggerException</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubLoggerException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubLoggerException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.InitializeStub">
            <summary>Initializes a new instance of type StubLoggerException</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubNullLogFactory">
            <summary>Stub type of Castle.Core.Logging.NullLogFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.Create(System.String)">
            <summary>Sets the stub of NullLogFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of NullLogFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubNullLogFactory.CreateString">
            <summary>Sets the stub of NullLogFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubNullLogFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of NullLogFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubNullLogFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubNullLogFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.InitializeStub">
            <summary>Initializes a new instance of type StubNullLogFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubNullLogger">
            <summary>Stub type of Castle.Core.Logging.NullLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogger.InitializeStub">
            <summary>Initializes a new instance of type StubNullLogger</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubStreamLogger">
            <summary>Stub type of Castle.Core.Logging.StreamLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.#ctor(System.String,System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.#ctor(System.String,System.IO.StreamWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.#ctor(System.String,System.IO.Stream,System.Text.Encoding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.#ctor(System.String,System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of StreamLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLogger.CreateChildLoggerString">
            <summary>Sets the stub of StreamLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.Dispose(System.Boolean)">
            <summary>Sets the stub of StreamLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLogger.DisposeBoolean">
            <summary>Sets the stub of StreamLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.InitializeStub">
            <summary>Initializes a new instance of type StubStreamLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of StreamLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of StreamLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubStreamLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.StreamLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.Create(System.String)">
            <summary>Sets the stub of StreamLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of StreamLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CreateString">
            <summary>Sets the stub of StreamLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of StreamLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubStreamLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubTraceLogger">
            <summary>Stub type of Castle.Core.Logging.TraceLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.#ctor(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of TraceLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLogger.CreateChildLoggerString">
            <summary>Sets the stub of TraceLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.InitializeStub">
            <summary>Initializes a new instance of type StubTraceLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of TraceLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of TraceLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubTraceLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.TraceLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.Create(System.String)">
            <summary>Sets the stub of TraceLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of TraceLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CreateString">
            <summary>Sets the stub of TraceLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of TraceLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubTraceLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubWebLogger">
            <summary>Stub type of Castle.Core.Logging.WebLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.#ctor(Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.#ctor(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of WebLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubWebLogger.CreateChildLoggerString">
            <summary>Sets the stub of WebLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubWebLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.InitializeStub">
            <summary>Initializes a new instance of type StubWebLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of WebLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubWebLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of WebLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLogger.TryToGetTraceContext">
            <summary>Sets the stub of WebLogger.TryToGetTraceContext()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubWebLogger.TryToGetTraceContext01">
            <summary>Sets the stub of WebLogger.TryToGetTraceContext()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubWebLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubWebLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubWebLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubWebLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.WebLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLoggerFactory.Create(System.String)">
            <summary>Sets the stub of WebLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of WebLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubWebLoggerFactory.CreateString">
            <summary>Sets the stub of WebLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubWebLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of WebLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubWebLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubWebLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubWebLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubWebLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubWebLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubWebLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubWebLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAbstractResource">
            <summary>Shim type of Castle.Core.Resource.AbstractResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.#ctor(Castle.Core.Resource.AbstractResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.Constructor">
            <summary>Sets the shim of AbstractResource.AbstractResource()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.Dispose">
            <summary>Sets the shim of AbstractResource.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.DisposeBoolean">
            <summary>Sets the shim of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.FileBasePathGet">
            <summary>Sets the shim of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.StaticConstructor">
            <summary>Sets the shim of AbstractResource.AbstractResource()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAbstractResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.AllInstances.Dispose">
            <summary>Sets the shim of AbstractResource.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.AllInstances.FileBasePathGet">
            <summary>Sets the shim of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAbstractStreamResource">
            <summary>Shim type of Castle.Core.Resource.AbstractStreamResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.#ctor(Castle.Core.Resource.AbstractStreamResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.Constructor">
            <summary>Sets the shim of AbstractStreamResource.AbstractStreamResource()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.CreateStreamGet">
            <summary>Sets the shim of AbstractStreamResource.get_CreateStream()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.CreateStreamSetStreamFactory">
            <summary>Sets the shim of AbstractStreamResource.set_CreateStream(StreamFactory value)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.GetStreamReader">
            <summary>Sets the shim of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.GetStreamReaderEncoding">
            <summary>Sets the shim of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances.CreateStreamGet">
            <summary>Sets the shim of AbstractStreamResource.get_CreateStream()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances.CreateStreamSetStreamFactory">
            <summary>Sets the shim of AbstractStreamResource.set_CreateStream(StreamFactory value)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances.GetStreamReader">
            <summary>Sets the shim of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances.GetStreamReaderEncoding">
            <summary>Sets the shim of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource">
            <summary>Shim type of Castle.Core.Resource.AssemblyBundleResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.#ctor(Castle.Core.Resource.AssemblyBundleResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.ConstructorCustomUri">
            <summary>Sets the shim of AssemblyBundleResource.AssemblyBundleResource(CustomUri resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.CreateRelativeString">
            <summary>Sets the shim of AssemblyBundleResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.GetStreamReader">
            <summary>Sets the shim of AssemblyBundleResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.GetStreamReaderEncoding">
            <summary>Sets the shim of AssemblyBundleResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.ObtainAssemblyString">
            <summary>Sets the shim of AssemblyBundleResource.ObtainAssembly(String assemblyName)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of AssemblyBundleResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.AllInstances.GetStreamReader">
            <summary>Sets the shim of AssemblyBundleResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.AllInstances.GetStreamReaderEncoding">
            <summary>Sets the shim of AssemblyBundleResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyResource">
            <summary>Shim type of Castle.Core.Resource.AssemblyResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.#ctor(Castle.Core.Resource.AssemblyResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConstructorCustomUri">
            <summary>Sets the shim of AssemblyResource.AssemblyResource(CustomUri resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConstructorCustomUriString">
            <summary>Sets the shim of AssemblyResource.AssemblyResource(CustomUri resource, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConstructorString">
            <summary>Sets the shim of AssemblyResource.AssemblyResource(String resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConvertToPathString">
            <summary>Sets the shim of AssemblyResource.ConvertToPath(String resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConvertToResourceNameStringStringString">
            <summary>Sets the shim of AssemblyResource.ConvertToResourceName(String assembly, String resource, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.CreateRelativeString">
            <summary>Sets the shim of AssemblyResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.CreateResourceFromPathStringString">
            <summary>Sets the shim of AssemblyResource.CreateResourceFromPath(String resource, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.CreateResourceFromUriCustomUriString">
            <summary>Sets the shim of AssemblyResource.CreateResourceFromUri(CustomUri resourcex, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.GetNameFoundStringArray">
            <summary>Sets the shim of AssemblyResource.GetNameFound(String[] names)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ObtainAssemblyString">
            <summary>Sets the shim of AssemblyResource.ObtainAssembly(String assemblyName)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ToString">
            <summary>Sets the shim of AssemblyResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.ConvertToPathString">
            <summary>Sets the shim of AssemblyResource.ConvertToPath(String resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.ConvertToResourceNameStringStringString">
            <summary>Sets the shim of AssemblyResource.ConvertToResourceName(String assembly, String resource, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of AssemblyResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.CreateResourceFromPathStringString">
            <summary>Sets the shim of AssemblyResource.CreateResourceFromPath(String resource, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.CreateResourceFromUriCustomUriString">
            <summary>Sets the shim of AssemblyResource.CreateResourceFromUri(CustomUri resourcex, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.GetNameFoundStringArray">
            <summary>Sets the shim of AssemblyResource.GetNameFound(String[] names)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.ToString01">
            <summary>Sets the shim of AssemblyResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory">
            <summary>Shim type of Castle.Core.Resource.AssemblyResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.#ctor(Castle.Core.Resource.AssemblyResourceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.Bind(Castle.Core.Resource.IResourceFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AcceptCustomUri">
            <summary>Sets the shim of AssemblyResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.Constructor">
            <summary>Sets the shim of AssemblyResourceFactory.AssemblyResourceFactory()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.CreateCustomUri">
            <summary>Sets the shim of AssemblyResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.CreateCustomUriString">
            <summary>Sets the shim of AssemblyResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AllInstances.AcceptCustomUri">
            <summary>Sets the shim of AssemblyResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AllInstances.CreateCustomUri">
            <summary>Sets the shim of AssemblyResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AllInstances.CreateCustomUriString">
            <summary>Sets the shim of AssemblyResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimConfigResource">
            <summary>Shim type of Castle.Core.Resource.ConfigResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.#ctor(Castle.Core.Resource.ConfigResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.Constructor">
            <summary>Sets the shim of ConfigResource.ConfigResource()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.ConstructorCustomUri">
            <summary>Sets the shim of ConfigResource.ConfigResource(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.ConstructorString">
            <summary>Sets the shim of ConfigResource.ConfigResource(String sectionName)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.CreateRelativeString">
            <summary>Sets the shim of ConfigResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.GetStreamReader">
            <summary>Sets the shim of ConfigResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.GetStreamReaderEncoding">
            <summary>Sets the shim of ConfigResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.ToString">
            <summary>Sets the shim of ConfigResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of ConfigResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances.GetStreamReader">
            <summary>Sets the shim of ConfigResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances.GetStreamReaderEncoding">
            <summary>Sets the shim of ConfigResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances.ToString01">
            <summary>Sets the shim of ConfigResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimConfigResourceFactory">
            <summary>Shim type of Castle.Core.Resource.ConfigResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.#ctor(Castle.Core.Resource.ConfigResourceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.Bind(Castle.Core.Resource.IResourceFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AcceptCustomUri">
            <summary>Sets the shim of ConfigResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.Constructor">
            <summary>Sets the shim of ConfigResourceFactory.ConfigResourceFactory()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.CreateCustomUri">
            <summary>Sets the shim of ConfigResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.CreateCustomUriString">
            <summary>Sets the shim of ConfigResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AllInstances.AcceptCustomUri">
            <summary>Sets the shim of ConfigResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AllInstances.CreateCustomUri">
            <summary>Sets the shim of ConfigResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AllInstances.CreateCustomUriString">
            <summary>Sets the shim of ConfigResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimCustomUri">
            <summary>Shim type of Castle.Core.Resource.CustomUri</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimCustomUri.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimCustomUri.#ctor(Castle.Core.Resource.CustomUri)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimCustomUri.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimCustomUri.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AbsolutePathGet">
            <summary>Sets the shim of CustomUri.get_AbsolutePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.ConstructorString">
            <summary>Sets the shim of CustomUri.CustomUri(String resourceIdentifier)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.HostGet">
            <summary>Sets the shim of CustomUri.get_Host()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.IsAssemblyGet">
            <summary>Sets the shim of CustomUri.get_IsAssembly()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.IsFileGet">
            <summary>Sets the shim of CustomUri.get_IsFile()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.IsUncGet">
            <summary>Sets the shim of CustomUri.get_IsUnc()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.ParseIdentifierString">
            <summary>Sets the shim of CustomUri.ParseIdentifier(String identifier)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.PathGet">
            <summary>Sets the shim of CustomUri.get_Path()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.SanityCheckString">
            <summary>Sets the shim of CustomUri.SanityCheck(String resourceIdentifier)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.SchemeGet">
            <summary>Sets the shim of CustomUri.get_Scheme()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.StaticConstructor">
            <summary>Sets the shim of CustomUri.CustomUri()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.AbsolutePathGet">
            <summary>Sets the shim of CustomUri.get_AbsolutePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.HostGet">
            <summary>Sets the shim of CustomUri.get_Host()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.IsAssemblyGet">
            <summary>Sets the shim of CustomUri.get_IsAssembly()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.IsFileGet">
            <summary>Sets the shim of CustomUri.get_IsFile()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.IsUncGet">
            <summary>Sets the shim of CustomUri.get_IsUnc()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.ParseIdentifierString">
            <summary>Sets the shim of CustomUri.ParseIdentifier(String identifier)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.PathGet">
            <summary>Sets the shim of CustomUri.get_Path()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.SchemeGet">
            <summary>Sets the shim of CustomUri.get_Scheme()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimFileResource">
            <summary>Shim type of Castle.Core.Resource.FileResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.#ctor(Castle.Core.Resource.FileResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.CheckFileExistsString">
            <summary>Sets the shim of FileResource.CheckFileExists(String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ConstructorCustomUri">
            <summary>Sets the shim of FileResource.FileResource(CustomUri resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ConstructorCustomUriString">
            <summary>Sets the shim of FileResource.FileResource(CustomUri resource, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ConstructorString">
            <summary>Sets the shim of FileResource.FileResource(String resourceName)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ConstructorStringString">
            <summary>Sets the shim of FileResource.FileResource(String resourceName, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.CreateRelativeString">
            <summary>Sets the shim of FileResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.CreateStreamFromPathStringString">
            <summary>Sets the shim of FileResource.CreateStreamFromPath(String resourcePath, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.CreateStreamFromUriCustomUriString">
            <summary>Sets the shim of FileResource.CreateStreamFromUri(CustomUri resource, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.FileBasePathGet">
            <summary>Sets the shim of FileResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ToString">
            <summary>Sets the shim of FileResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of FileResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.CreateStreamFromPathStringString">
            <summary>Sets the shim of FileResource.CreateStreamFromPath(String resourcePath, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.CreateStreamFromUriCustomUriString">
            <summary>Sets the shim of FileResource.CreateStreamFromUri(CustomUri resource, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.FileBasePathGet">
            <summary>Sets the shim of FileResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.ToString01">
            <summary>Sets the shim of FileResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimFileResourceFactory">
            <summary>Shim type of Castle.Core.Resource.FileResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.#ctor(Castle.Core.Resource.FileResourceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.Bind(Castle.Core.Resource.IResourceFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AcceptCustomUri">
            <summary>Sets the shim of FileResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.Constructor">
            <summary>Sets the shim of FileResourceFactory.FileResourceFactory()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.CreateCustomUri">
            <summary>Sets the shim of FileResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.CreateCustomUriString">
            <summary>Sets the shim of FileResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AllInstances.AcceptCustomUri">
            <summary>Sets the shim of FileResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AllInstances.CreateCustomUri">
            <summary>Sets the shim of FileResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AllInstances.CreateCustomUriString">
            <summary>Sets the shim of FileResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimResourceException">
            <summary>Shim type of Castle.Core.Resource.ResourceException</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.#ctor(Castle.Core.Resource.ResourceException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.Constructor">
            <summary>Sets the shim of ResourceException.ResourceException()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ResourceException.ResourceException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.ConstructorString">
            <summary>Sets the shim of ResourceException.ResourceException(String message)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.ConstructorStringException">
            <summary>Sets the shim of ResourceException.ResourceException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimResourceException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimStaticContentResource">
            <summary>Shim type of Castle.Core.Resource.StaticContentResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.#ctor(Castle.Core.Resource.StaticContentResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.ConstructorString">
            <summary>Sets the shim of StaticContentResource.StaticContentResource(String contents)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.CreateRelativeString">
            <summary>Sets the shim of StaticContentResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.GetStreamReader">
            <summary>Sets the shim of StaticContentResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.GetStreamReaderEncoding">
            <summary>Sets the shim of StaticContentResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimStaticContentResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of StaticContentResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.AllInstances.GetStreamReader">
            <summary>Sets the shim of StaticContentResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.AllInstances.GetStreamReaderEncoding">
            <summary>Sets the shim of StaticContentResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimUncResource">
            <summary>Shim type of Castle.Core.Resource.UncResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.#ctor(Castle.Core.Resource.UncResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.CheckFileExistsString">
            <summary>Sets the shim of UncResource.CheckFileExists(String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ConstructorCustomUri">
            <summary>Sets the shim of UncResource.UncResource(CustomUri resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ConstructorCustomUriString">
            <summary>Sets the shim of UncResource.UncResource(CustomUri resource, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ConstructorString">
            <summary>Sets the shim of UncResource.UncResource(String resourceName)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ConstructorStringString">
            <summary>Sets the shim of UncResource.UncResource(String resourceName, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.CreateRelativeString">
            <summary>Sets the shim of UncResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.CreateStreamFromUriCustomUriString">
            <summary>Sets the shim of UncResource.CreateStreamFromUri(CustomUri resource, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.FileBasePathGet">
            <summary>Sets the shim of UncResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ToString">
            <summary>Sets the shim of UncResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of UncResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances.CreateStreamFromUriCustomUriString">
            <summary>Sets the shim of UncResource.CreateStreamFromUri(CustomUri resource, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances.FileBasePathGet">
            <summary>Sets the shim of UncResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances.ToString01">
            <summary>Sets the shim of UncResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimUncResourceFactory">
            <summary>Shim type of Castle.Core.Resource.UncResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.#ctor(Castle.Core.Resource.UncResourceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.Bind(Castle.Core.Resource.IResourceFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AcceptCustomUri">
            <summary>Sets the shim of UncResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.Constructor">
            <summary>Sets the shim of UncResourceFactory.UncResourceFactory()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.CreateCustomUri">
            <summary>Sets the shim of UncResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.CreateCustomUriString">
            <summary>Sets the shim of UncResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AllInstances.AcceptCustomUri">
            <summary>Sets the shim of UncResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AllInstances.CreateCustomUri">
            <summary>Sets the shim of UncResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AllInstances.CreateCustomUriString">
            <summary>Sets the shim of UncResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory">
            <summary>Stub type of Castle.Core.Resource.AssemblyResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyResourceFactory</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubConfigResourceFactory">
            <summary>Stub type of Castle.Core.Resource.ConfigResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResourceFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResourceFactory.InitializeStub">
            <summary>Initializes a new instance of type StubConfigResourceFactory</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResourceFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResourceFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResourceFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubFileResourceFactory">
            <summary>Stub type of Castle.Core.Resource.FileResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResourceFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResourceFactory.InitializeStub">
            <summary>Initializes a new instance of type StubFileResourceFactory</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResourceFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResourceFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResourceFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubIResourceFactory">
            <summary>Stub type of Castle.Core.Resource.IResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResourceFactory.#ctor">
            <summary>Initializes a new instance of type StubIResourceFactory</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResourceFactory.AcceptCustomUri">
            <summary>Sets the stub of IResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResourceFactory.cc::Castle#Core#Resource#IResourceFactory#Accept(Castle.Core.Resource.CustomUri)">
            <summary>Sets the stub of IResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResourceFactory.cc::Castle#Core#Resource#IResourceFactory#Create(Castle.Core.Resource.CustomUri)">
            <summary>Sets the stub of IResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResourceFactory.cc::Castle#Core#Resource#IResourceFactory#Create(Castle.Core.Resource.CustomUri,System.String)">
            <summary>Sets the stub of IResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResourceFactory.CreateCustomUri">
            <summary>Sets the stub of IResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResourceFactory.CreateCustomUriString">
            <summary>Sets the stub of IResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubResourceException">
            <summary>Stub type of Castle.Core.Resource.ResourceException</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubResourceException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubResourceException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.InitializeStub">
            <summary>Initializes a new instance of type StubResourceException</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubUncResourceFactory">
            <summary>Stub type of Castle.Core.Resource.UncResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResourceFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResourceFactory.InitializeStub">
            <summary>Initializes a new instance of type StubUncResourceFactory</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResourceFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResourceFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResourceFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender">
            <summary>Shim type of Castle.Core.Smtp.DefaultSmtpSender</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.#ctor(Castle.Core.Smtp.DefaultSmtpSender)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.Bind(Castle.Core.Smtp.IEmailSender)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AsyncSendGet">
            <summary>Sets the shim of DefaultSmtpSender.get_AsyncSend()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AsyncSendSetBoolean">
            <summary>Sets the shim of DefaultSmtpSender.set_AsyncSend(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.CanAccessCredentialsGet">
            <summary>Sets the shim of DefaultSmtpSender.get_CanAccessCredentials()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.ConfigureSmtpClient">
            <summary>Sets the shim of DefaultSmtpSender.Configure(SmtpClient smtpClient)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.ConstructorString">
            <summary>Sets the shim of DefaultSmtpSender.DefaultSmtpSender(String hostname)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.DomainGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Domain()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.DomainSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_Domain(String value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.HasCredentialsGet">
            <summary>Sets the shim of DefaultSmtpSender.get_HasCredentials()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.HostnameGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Hostname()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.PasswordGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Password()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.PasswordSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_Password(String value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.PortGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Port()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.PortSetInt32">
            <summary>Sets the shim of DefaultSmtpSender.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.SendIEnumerableOfMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.Send(IEnumerable`1&lt;MailMessage&gt; messages)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.SendMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.Send(MailMessage message)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.SendStringStringStringString">
            <summary>Sets the shim of DefaultSmtpSender.Send(String from, String to, String subject, String messageText)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.TimeoutGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Timeout()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.TimeoutSetInt32">
            <summary>Sets the shim of DefaultSmtpSender.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.UseSslGet">
            <summary>Sets the shim of DefaultSmtpSender.get_UseSsl()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.UseSslSetBoolean">
            <summary>Sets the shim of DefaultSmtpSender.set_UseSsl(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.UserNameGet">
            <summary>Sets the shim of DefaultSmtpSender.get_UserName()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.UserNameSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_UserName(String value)</summary>
        </member>
        <member name="T:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.AsyncSendGet">
            <summary>Sets the shim of DefaultSmtpSender.get_AsyncSend()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.AsyncSendSetBoolean">
            <summary>Sets the shim of DefaultSmtpSender.set_AsyncSend(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.ConfigureSmtpClient">
            <summary>Sets the shim of DefaultSmtpSender.Configure(SmtpClient smtpClient)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.DomainGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Domain()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.DomainSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_Domain(String value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.HasCredentialsGet">
            <summary>Sets the shim of DefaultSmtpSender.get_HasCredentials()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.HostnameGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Hostname()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.PasswordGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Password()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.PasswordSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_Password(String value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.PortGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Port()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.PortSetInt32">
            <summary>Sets the shim of DefaultSmtpSender.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.SendIEnumerableOfMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.Send(IEnumerable`1&lt;MailMessage&gt; messages)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.SendMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.Send(MailMessage message)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.SendStringStringStringString">
            <summary>Sets the shim of DefaultSmtpSender.Send(String from, String to, String subject, String messageText)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.TimeoutGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Timeout()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.TimeoutSetInt32">
            <summary>Sets the shim of DefaultSmtpSender.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.UseSslGet">
            <summary>Sets the shim of DefaultSmtpSender.get_UseSsl()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.UseSslSetBoolean">
            <summary>Sets the shim of DefaultSmtpSender.set_UseSsl(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.UserNameGet">
            <summary>Sets the shim of DefaultSmtpSender.get_UserName()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.UserNameSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_UserName(String value)</summary>
        </member>
        <member name="T:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender">
            <summary>Stub type of Castle.Core.Smtp.DefaultSmtpSender</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.Configure(System.Net.Mail.SmtpClient)">
            <summary>Sets the stub of DefaultSmtpSender.Configure(SmtpClient smtpClient)</summary>
        </member>
        <member name="F:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.ConfigureSmtpClient">
            <summary>Sets the stub of DefaultSmtpSender.Configure(SmtpClient smtpClient)</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultSmtpSender</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Smtp.Fakes.StubIEmailSender">
            <summary>Stub type of Castle.Core.Smtp.IEmailSender</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubIEmailSender.#ctor">
            <summary>Initializes a new instance of type StubIEmailSender</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubIEmailSender.cc::Castle#Core#Smtp#IEmailSender#Send(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of IEmailSender.Send(MailMessage message)</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubIEmailSender.cc::Castle#Core#Smtp#IEmailSender#Send(System.Collections.Generic.IEnumerable{System.Net.Mail.MailMessage})">
            <summary>Sets the stub of IEmailSender.Send(IEnumerable`1&lt;MailMessage&gt; messages)</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubIEmailSender.cc::Castle#Core#Smtp#IEmailSender#Send(System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of IEmailSender.Send(String from, String to, String subject, String messageText)</summary>
        </member>
        <member name="F:Castle.Core.Smtp.Fakes.StubIEmailSender.SendIEnumerableOfMailMessage">
            <summary>Sets the stub of IEmailSender.Send(IEnumerable`1&lt;MailMessage&gt; messages)</summary>
        </member>
        <member name="F:Castle.Core.Smtp.Fakes.StubIEmailSender.SendMailMessage">
            <summary>Sets the stub of IEmailSender.Send(MailMessage message)</summary>
        </member>
        <member name="F:Castle.Core.Smtp.Fakes.StubIEmailSender.SendStringStringStringString">
            <summary>Sets the stub of IEmailSender.Send(String from, String to, String subject, String messageText)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIAttributeDisassembler">
            <summary>Stub type of Castle.DynamicProxy.IAttributeDisassembler</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIAttributeDisassembler.#ctor">
            <summary>Initializes a new instance of type StubIAttributeDisassembler</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIAttributeDisassembler.cc::Castle#DynamicProxy#IAttributeDisassembler#Disassemble(System.Attribute)">
            <summary>Sets the stub of IAttributeDisassembler.Disassemble(Attribute attribute)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIAttributeDisassembler.DisassembleAttribute">
            <summary>Sets the stub of IAttributeDisassembler.Disassemble(Attribute attribute)</summary>
        </member>
    </members>
</doc>
